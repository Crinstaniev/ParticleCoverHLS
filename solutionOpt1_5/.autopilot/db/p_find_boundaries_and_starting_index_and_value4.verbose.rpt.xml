<profile>

<section name = "Vitis HLS Report for 'p_find_boundaries_and_starting_index_and_value4'" level="0">
<item name = "Date">Mon Jul  1 23:31:32 2024
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)</item>
<item name = "Project">ParticleCoverHLS</item>
<item name = "Solution">solutionOpt1_5 (Vivado IP Flow Target)</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcvu11p-flga2577-1-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.649 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="p_find_left_and_right_boundaries6_U0">p_find_left_and_right_boundaries6, ?, ?, ?, ?, ?, ?, none</column>
<column name="p_find_starting_index_and_value5_U0">p_find_starting_index_and_value5, ?, ?, ?, ?, ?, ?, none</column>
<column name="p_find_boundaries_and_starting_index_and_value_entry25_U0">p_find_boundaries_and_starting_index_and_value_entry25, 0, 0, 0 ns, 0 ns, 0, 0, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 20, -</column>
<column name="FIFO">-, -, 297, 201, -</column>
<column name="Instance">0, 6, 3758, 23382, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 27, -</column>
<column name="Register">-, -, 3, -, -</column>
<specialColumn name="Available SLR">1344, 3072, 864000, 432000, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">0, ~0, ~0, 5, 0</specialColumn>
<specialColumn name="Available">4032, 9216, 2592000, 1296000, 960</specialColumn>
<specialColumn name="Utilization (%)">0, ~0, ~0, 1, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="p_find_boundaries_and_starting_index_and_value_entry25_U0">p_find_boundaries_and_starting_index_and_value_entry25, 0, 0, 2, 38, 0</column>
<column name="p_find_left_and_right_boundaries6_U0">p_find_left_and_right_boundaries6, 0, 4, 2914, 19330, 0</column>
<column name="p_find_starting_index_and_value5_U0">p_find_starting_index_and_value5, 0, 2, 842, 4014, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="i_c7_U">0, 99, 0, -, 2, 3, 6</column>
<column name="i_c_U">0, 99, 0, -, 2, 3, 6</column>
<column name="projectionToRow_c_U">0, 99, 0, -, 2, 26, 52</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_continue">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_done">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 2, 1, 1</column>
<column name="p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="p_find_left_and_right_boundaries6_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="p_find_starting_index_and_value5_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_p_find_left_and_right_boundaries6_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_p_find_starting_index_and_value5_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="num_points_address0">out, 3, ap_memory, num_points, array</column>
<column name="num_points_ce0">out, 1, ap_memory, num_points, array</column>
<column name="num_points_d0">out, 32, ap_memory, num_points, array</column>
<column name="num_points_q0">in, 32, ap_memory, num_points, array</column>
<column name="num_points_we0">out, 1, ap_memory, num_points, array</column>
<column name="num_points_address1">out, 3, ap_memory, num_points, array</column>
<column name="num_points_ce1">out, 1, ap_memory, num_points, array</column>
<column name="num_points_d1">out, 32, ap_memory, num_points, array</column>
<column name="num_points_q1">in, 32, ap_memory, num_points, array</column>
<column name="num_points_we1">out, 1, ap_memory, num_points, array</column>
<column name="points_address0">out, 12, ap_memory, points, array</column>
<column name="points_ce0">out, 1, ap_memory, points, array</column>
<column name="points_d0">out, 128, ap_memory, points, array</column>
<column name="points_q0">in, 128, ap_memory, points, array</column>
<column name="points_we0">out, 1, ap_memory, points, array</column>
<column name="points_address1">out, 12, ap_memory, points, array</column>
<column name="points_ce1">out, 1, ap_memory, points, array</column>
<column name="points_d1">out, 128, ap_memory, points, array</column>
<column name="points_q1">in, 128, ap_memory, points, array</column>
<column name="points_we1">out, 1, ap_memory, points, array</column>
<column name="left_bound">out, 32, ap_vld, left_bound, pointer</column>
<column name="left_bound_ap_vld">out, 1, ap_vld, left_bound, pointer</column>
<column name="projectionToRow">in, 26, ap_none, projectionToRow, scalar</column>
<column name="projectionToRow_ap_vld">in, 1, ap_none, projectionToRow, scalar</column>
<column name="start_index">out, 32, ap_vld, start_index, pointer</column>
<column name="start_index_ap_vld">out, 1, ap_vld, start_index, pointer</column>
<column name="start_value_i">in, 32, ap_ovld, start_value, pointer</column>
<column name="start_value_o">out, 32, ap_ovld, start_value, pointer</column>
<column name="start_value_i_ap_vld">in, 1, ap_ovld, start_value, pointer</column>
<column name="start_value_o_ap_vld">out, 1, ap_ovld, start_value, pointer</column>
<column name="i">in, 3, ap_none, i, scalar</column>
<column name="i_ap_vld">in, 1, ap_none, i, scalar</column>
<column name="lbVal_constprop_i">in, 32, ap_ovld, lbVal_constprop, pointer</column>
<column name="lbVal_constprop_o">out, 32, ap_ovld, lbVal_constprop, pointer</column>
<column name="lbVal_constprop_i_ap_vld">in, 1, ap_ovld, lbVal_constprop, pointer</column>
<column name="lbVal_constprop_o_ap_vld">out, 1, ap_ovld, lbVal_constprop, pointer</column>
<column name="rbVal_constprop_i">in, 32, ap_ovld, rbVal_constprop, pointer</column>
<column name="rbVal_constprop_o">out, 32, ap_ovld, rbVal_constprop, pointer</column>
<column name="rbVal_constprop_i_ap_vld">in, 1, ap_ovld, rbVal_constprop, pointer</column>
<column name="rbVal_constprop_o_ap_vld">out, 1, ap_ovld, rbVal_constprop, pointer</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, _find_boundaries_and_starting_index_and_value4, return value</column>
</table>
</item>
</section>
</profile>
