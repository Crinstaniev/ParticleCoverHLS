// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_starting_index_and_value5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        num_points_address1,
        num_points_ce1,
        num_points_q1,
        points_address1,
        points_ce1,
        points_q1,
        projectionToRow_dout,
        projectionToRow_empty_n,
        projectionToRow_read,
        start_index,
        start_index_ap_vld,
        start_value_i,
        start_value_o,
        start_value_o_ap_vld,
        i_dout,
        i_empty_n,
        i_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_pp0_stage2 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] num_points_address1;
output   num_points_ce1;
input  [31:0] num_points_q1;
output  [11:0] points_address1;
output   points_ce1;
input  [127:0] points_q1;
input  [25:0] projectionToRow_dout;
input   projectionToRow_empty_n;
output   projectionToRow_read;
output  [31:0] start_index;
output   start_index_ap_vld;
input  [31:0] start_value_i;
output  [31:0] start_value_o;
output   start_value_o_ap_vld;
input  [2:0] i_dout;
input   i_empty_n;
output   i_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg num_points_ce1;
reg points_ce1;
reg projectionToRow_read;
reg[31:0] start_index;
reg start_index_ap_vld;
reg[31:0] start_value_o;
reg start_value_o_ap_vld;
reg i_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    projectionToRow_blk_n;
reg    i_blk_n;
reg   [31:0] j_reg_204;
reg   [31:0] j_reg_204_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] j_reg_204_pp0_iter2_reg;
reg   [25:0] p_Val2_s_reg_1304;
reg   [2:0] i_1_reg_1312;
wire   [31:0] projectionToRow_cast1_i_fu_230_p1;
reg   [31:0] projectionToRow_cast1_i_reg_1322;
wire    ap_CS_fsm_state2;
reg   [31:0] num_points_load_reg_1330;
wire   [0:0] tobool_i19_i_fu_233_p2;
reg   [0:0] tobool_i19_i_reg_1335;
wire   [63:0] m_13_cast_i_fu_238_p1;
reg   [63:0] m_13_cast_i_reg_1340;
wire   [15:0] shl_ln_fu_241_p3;
reg   [15:0] shl_ln_reg_1346;
wire   [0:0] icmp_ln28_fu_248_p2;
reg   [0:0] icmp_ln28_reg_1351;
wire   [31:0] LD_1_fu_579_p1;
reg   [31:0] LD_1_reg_1360;
wire   [31:0] z_bits_fu_583_p1;
reg   [31:0] z_bits_reg_1365;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] z_bits_reg_1365_pp0_iter1_reg;
wire   [0:0] p_Result_21_fu_587_p3;
reg   [0:0] p_Result_21_reg_1371;
wire   [31:0] m_19_fu_601_p3;
reg   [31:0] m_19_reg_1376;
wire   [31:0] sub_ln944_fu_627_p2;
reg   [31:0] sub_ln944_reg_1381;
wire   [0:0] icmp_ln958_fu_721_p2;
reg   [0:0] icmp_ln958_reg_1387;
wire   [0:0] select_ln958_fu_741_p3;
reg   [0:0] select_ln958_reg_1392;
wire   [7:0] trunc_ln943_fu_749_p1;
reg   [7:0] trunc_ln943_reg_1397;
wire   [31:0] retval_0_i81_i_fu_756_p3;
reg   [31:0] retval_0_i81_i_reg_1402;
wire   [31:0] add_ln28_fu_763_p2;
reg   [31:0] add_ln28_reg_1407;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] select_ln935_fu_891_p3;
reg   [31:0] select_ln935_reg_1412;
wire   [31:0] grp_fu_217_p2;
reg   [31:0] dc_reg_1417;
wire   [0:0] icmp_ln935_1_fu_899_p2;
reg   [0:0] icmp_ln935_1_reg_1422;
wire   [0:0] p_Result_29_fu_905_p3;
reg   [0:0] p_Result_29_reg_1427;
reg   [62:0] m_23_reg_1432;
reg   [0:0] p_Result_18_reg_1437;
wire   [7:0] trunc_ln943_2_fu_1139_p1;
reg   [7:0] trunc_ln943_2_reg_1442;
wire   [0:0] icmp_ln30_fu_1255_p2;
reg   [0:0] icmp_ln30_reg_1457;
wire   [0:0] icmp_ln30_1_fu_1261_p2;
reg   [0:0] icmp_ln30_1_reg_1462;
wire   [0:0] icmp_ln30_2_fu_1267_p2;
reg   [0:0] icmp_ln30_2_reg_1467;
wire   [0:0] icmp_ln30_3_fu_1273_p2;
reg   [0:0] icmp_ln30_3_reg_1472;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_phi_mux_j_phi_fu_209_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] idxprom_i_fu_225_p1;
wire   [63:0] zext_ln29_fu_292_p1;
reg    ap_block_state1;
reg   [31:0] start_index_preg;
wire    ap_block_pp0_stage1_01001;
wire   [0:0] and_ln30_1_fu_1293_p2;
wire   [31:0] sub_ln703_fu_1299_p2;
reg   [31:0] start_value_o_preg;
wire   [31:0] grp_fu_221_p0;
wire   [31:0] grp_fu_221_p1;
wire   [11:0] trunc_ln29_fu_253_p1;
wire   [15:0] shl_ln29_1_fu_257_p3;
wire   [15:0] add_ln29_fu_265_p2;
wire   [2:0] lshr_ln_fu_270_p4;
wire   [8:0] trunc_ln29_1_fu_280_p1;
wire   [11:0] tmp_s_fu_284_p3;
reg   [31:0] p_Result_25_fu_297_p4;
reg   [31:0] l_1_fu_306_p3;
wire   [31:0] sub_ln944_1_fu_314_p2;
wire   [31:0] lsb_index_1_fu_320_p2;
wire   [30:0] tmp_44_fu_326_p4;
wire   [5:0] trunc_ln947_1_fu_342_p1;
wire   [5:0] sub_ln947_1_fu_346_p2;
wire   [31:0] zext_ln947_1_fu_352_p1;
wire   [31:0] lshr_ln947_1_fu_356_p2;
wire   [31:0] shl_ln949_1_fu_367_p2;
wire   [25:0] trunc_ln949_fu_373_p1;
wire   [31:0] p_Result_10_fu_362_p2;
wire   [25:0] trunc_ln949_1_fu_382_p1;
wire   [25:0] and_ln949_1_fu_377_p2;
wire   [5:0] tmp_fu_392_p4;
wire   [25:0] or_ln949_3_fu_386_p2;
wire   [31:0] or_ln949_1_fu_402_p3;
wire   [0:0] tmp_45_fu_416_p3;
wire   [0:0] p_Result_26_fu_430_p3;
wire   [0:0] xor_ln949_1_fu_424_p2;
wire   [31:0] sub_ln959_1_fu_449_p2;
wire   [63:0] zext_ln959_2_fu_455_p1;
wire   [0:0] icmp_ln946_1_fu_336_p2;
wire   [0:0] icmp_ln949_1_fu_410_p2;
wire   [31:0] add_ln958_1_fu_472_p2;
wire   [63:0] zext_ln958_1_fu_478_p1;
wire   [0:0] icmp_ln958_1_fu_437_p2;
wire   [0:0] select_ln946_1_fu_464_p3;
wire   [0:0] and_ln949_3_fu_443_p2;
wire   [63:0] lshr_ln958_1_fu_482_p2;
wire   [63:0] shl_ln959_1_fu_459_p2;
wire   [0:0] select_ln958_2_fu_487_p3;
wire   [63:0] m_12_fu_495_p3;
wire   [63:0] zext_ln961_1_fu_503_p1;
wire   [63:0] m_13_fu_507_p2;
wire   [62:0] m_21_fu_513_p4;
wire   [0:0] p_Result_12_fu_527_p3;
wire   [7:0] trunc_ln943_1_fu_543_p1;
wire   [7:0] sub_ln964_1_fu_547_p2;
wire   [7:0] select_ln943_1_fu_535_p3;
wire   [7:0] add_ln964_1_fu_553_p2;
wire   [63:0] zext_ln962_1_fu_523_p1;
wire   [8:0] tmp_3_i_fu_559_p3;
wire   [63:0] p_Result_27_fu_567_p5;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_V_fu_595_p2;
reg   [31:0] p_Result_22_fu_609_p4;
reg   [31:0] l_fu_619_p3;
wire   [31:0] lsb_index_fu_633_p2;
wire   [30:0] tmp_41_fu_639_p4;
wire   [5:0] trunc_ln947_fu_655_p1;
wire   [5:0] sub_ln947_fu_659_p2;
wire   [31:0] zext_ln947_fu_665_p1;
wire   [31:0] lshr_ln947_fu_669_p2;
wire   [31:0] shl_ln949_fu_675_p2;
wire   [31:0] or_ln949_4_fu_681_p2;
wire   [31:0] and_ln949_fu_687_p2;
wire   [0:0] tmp_42_fu_699_p3;
wire   [0:0] p_Result_23_fu_713_p3;
wire   [0:0] xor_ln949_fu_707_p2;
wire   [0:0] icmp_ln946_fu_649_p2;
wire   [0:0] icmp_ln949_fu_693_p2;
wire   [0:0] select_ln946_fu_733_p3;
wire   [0:0] and_ln949_2_fu_727_p2;
wire   [31:0] bitcast_ln744_1_fu_753_p1;
wire    ap_block_pp0_stage2;
wire   [31:0] sub_ln959_fu_777_p2;
wire   [63:0] zext_ln959_fu_774_p1;
wire   [63:0] zext_ln959_1_fu_782_p1;
wire   [31:0] add_ln958_fu_792_p2;
wire   [63:0] zext_ln958_fu_797_p1;
wire   [63:0] lshr_ln958_fu_801_p2;
wire   [63:0] shl_ln959_fu_786_p2;
wire   [63:0] m_fu_807_p3;
wire   [63:0] zext_ln961_fu_814_p1;
wire   [63:0] m_8_fu_817_p2;
wire   [62:0] m_20_fu_823_p4;
wire   [0:0] p_Result_s_fu_837_p3;
wire   [7:0] sub_ln964_fu_853_p2;
wire   [7:0] select_ln943_fu_845_p3;
wire   [7:0] add_ln964_fu_858_p2;
wire   [63:0] zext_ln962_fu_833_p1;
wire   [8:0] tmp_i_fu_864_p3;
wire   [63:0] p_Result_24_fu_871_p5;
wire   [31:0] LD_fu_883_p1;
wire   [0:0] icmp_ln935_fu_769_p2;
wire   [31:0] bitcast_ln744_fu_887_p1;
wire   [31:0] tmp_V_4_fu_913_p2;
wire   [31:0] m_22_fu_919_p3;
reg   [31:0] p_Result_30_fu_927_p4;
reg   [31:0] l_2_fu_937_p3;
wire   [31:0] sub_ln944_2_fu_945_p2;
wire   [31:0] lsb_index_2_fu_951_p2;
wire   [30:0] tmp_48_fu_957_p4;
wire   [5:0] trunc_ln947_2_fu_973_p1;
wire   [5:0] sub_ln947_2_fu_977_p2;
wire   [31:0] zext_ln947_2_fu_983_p1;
wire   [31:0] lshr_ln947_2_fu_987_p2;
wire   [31:0] shl_ln949_2_fu_993_p2;
wire   [31:0] or_ln949_fu_999_p2;
wire   [31:0] and_ln949_4_fu_1005_p2;
wire   [0:0] tmp_49_fu_1017_p3;
wire   [0:0] p_Result_31_fu_1031_p3;
wire   [0:0] xor_ln949_2_fu_1025_p2;
wire   [31:0] sub_ln959_2_fu_1055_p2;
wire   [63:0] zext_ln959_3_fu_1051_p1;
wire   [63:0] zext_ln959_4_fu_1061_p1;
wire   [0:0] icmp_ln946_2_fu_967_p2;
wire   [0:0] icmp_ln949_2_fu_1011_p2;
wire   [31:0] add_ln958_2_fu_1079_p2;
wire   [63:0] zext_ln958_2_fu_1085_p1;
wire   [0:0] icmp_ln958_2_fu_1039_p2;
wire   [0:0] select_ln946_2_fu_1071_p3;
wire   [0:0] and_ln949_5_fu_1045_p2;
wire   [63:0] lshr_ln958_2_fu_1089_p2;
wire   [63:0] shl_ln959_2_fu_1065_p2;
wire   [0:0] select_ln958_4_fu_1095_p3;
wire   [63:0] m_16_fu_1103_p3;
wire   [63:0] zext_ln961_2_fu_1111_p1;
wire   [63:0] m_17_fu_1115_p2;
wire   [31:0] data_V_fu_1143_p1;
wire   [30:0] trunc_ln368_fu_1146_p1;
wire   [31:0] p_Result_28_fu_1154_p3;
wire   [7:0] sub_ln964_2_fu_1177_p2;
wire   [7:0] select_ln943_2_fu_1170_p3;
wire   [7:0] add_ln964_2_fu_1182_p2;
wire   [63:0] zext_ln962_2_fu_1167_p1;
wire   [8:0] tmp_5_i_fu_1188_p3;
wire   [63:0] p_Result_32_fu_1195_p5;
wire   [30:0] LD_2_fu_1207_p1;
wire   [30:0] data_V_1_fu_1211_p3;
wire   [31:0] p_Result_33_fu_1222_p3;
wire   [7:0] tmp_5_fu_1235_p4;
wire   [22:0] trunc_ln30_fu_1150_p1;
wire   [7:0] tmp_6_fu_1245_p4;
wire   [22:0] trunc_ln30_1_fu_1218_p1;
wire   [0:0] or_ln30_fu_1279_p2;
wire   [0:0] or_ln30_1_fu_1283_p2;
wire   [0:0] and_ln30_fu_1287_p2;
wire   [0:0] grp_fu_221_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state11;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 start_index_preg = 32'd0;
#0 start_value_o_preg = 32'd0;
end

system_top_fsub_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln935_reg_1412),
    .din1(retval_0_i81_i_reg_1402),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

system_top_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_221_p0),
    .din1(grp_fu_221_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_221_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_index_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
            start_index_preg <= j_reg_204_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_value_o_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
            start_value_o_preg <= sub_ln703_fu_1299_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1351 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_reg_204 <= add_ln28_reg_1407;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_248_p2 == 1'd0) & (tobool_i19_i_reg_1335 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LD_1_reg_1360 <= LD_1_fu_579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln28_reg_1407 <= add_ln28_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dc_reg_1417 <= grp_fu_217_p2;
        icmp_ln935_1_reg_1422 <= icmp_ln935_1_fu_899_p2;
        m_23_reg_1432 <= {{m_17_fu_1115_p2[63:1]}};
        p_Result_18_reg_1437 <= m_17_fu_1115_p2[32'd25];
        p_Result_29_reg_1427 <= start_value_i[32'd31];
        trunc_ln943_2_reg_1442 <= trunc_ln943_2_fu_1139_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        i_1_reg_1312 <= i_dout;
        p_Val2_s_reg_1304 <= projectionToRow_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln28_reg_1351 <= icmp_ln28_fu_248_p2;
        icmp_ln30_1_reg_1462 <= icmp_ln30_1_fu_1261_p2;
        icmp_ln30_2_reg_1467 <= icmp_ln30_2_fu_1267_p2;
        icmp_ln30_3_reg_1472 <= icmp_ln30_3_fu_1273_p2;
        icmp_ln30_reg_1457 <= icmp_ln30_fu_1255_p2;
        j_reg_204_pp0_iter1_reg <= j_reg_204;
        j_reg_204_pp0_iter2_reg <= j_reg_204_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1351 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln958_reg_1387 <= icmp_ln958_fu_721_p2;
        m_19_reg_1376 <= m_19_fu_601_p3;
        p_Result_21_reg_1371 <= points_q1[32'd31];
        retval_0_i81_i_reg_1402 <= retval_0_i81_i_fu_756_p3;
        select_ln958_reg_1392 <= select_ln958_fu_741_p3;
        sub_ln944_reg_1381 <= sub_ln944_fu_627_p2;
        trunc_ln943_reg_1397 <= trunc_ln943_fu_749_p1;
        z_bits_reg_1365 <= z_bits_fu_583_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_13_cast_i_reg_1340[25 : 0] <= m_13_cast_i_fu_238_p1[25 : 0];
        num_points_load_reg_1330 <= num_points_q1;
        projectionToRow_cast1_i_reg_1322[25 : 0] <= projectionToRow_cast1_i_fu_230_p1[25 : 0];
        shl_ln_reg_1346[15 : 13] <= shl_ln_fu_241_p3[15 : 13];
        tobool_i19_i_reg_1335 <= tobool_i19_i_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_reg_1351 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln935_reg_1412 <= select_ln935_fu_891_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        z_bits_reg_1365_pp0_iter1_reg <= z_bits_reg_1365;
    end
end

always @ (*) begin
    if ((icmp_ln28_reg_1351 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln28_reg_1351 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_phi_fu_209_p4 = add_ln28_reg_1407;
    end else begin
        ap_phi_mux_j_phi_fu_209_p4 = j_reg_204;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_points_ce1 = 1'b1;
    end else begin
        num_points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        points_ce1 = 1'b1;
    end else begin
        points_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_blk_n = projectionToRow_empty_n;
    end else begin
        projectionToRow_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        projectionToRow_read = 1'b1;
    end else begin
        projectionToRow_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
        start_index = j_reg_204_pp0_iter2_reg;
    end else begin
        start_index = start_index_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
        start_index_ap_vld = 1'b1;
    end else begin
        start_index_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
        start_value_o = sub_ln703_fu_1299_p2;
    end else begin
        start_value_o = start_value_o_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln30_1_fu_1293_p2))) begin
        start_value_o_ap_vld = 1'b1;
    end else begin
        start_value_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((icmp_ln28_reg_1351 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln28_reg_1351 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_579_p1 = p_Result_27_fu_567_p5[31:0];

assign LD_2_fu_1207_p1 = p_Result_32_fu_1195_p5[30:0];

assign LD_fu_883_p1 = p_Result_24_fu_871_p5[31:0];

assign add_ln28_fu_763_p2 = (j_reg_204 + 32'd1);

assign add_ln29_fu_265_p2 = (shl_ln29_1_fu_257_p3 + shl_ln_reg_1346);

assign add_ln958_1_fu_472_p2 = ($signed(sub_ln944_1_fu_314_p2) + $signed(32'd4294967271));

assign add_ln958_2_fu_1079_p2 = ($signed(sub_ln944_2_fu_945_p2) + $signed(32'd4294967271));

assign add_ln958_fu_792_p2 = ($signed(sub_ln944_reg_1381) + $signed(32'd4294967271));

assign add_ln964_1_fu_553_p2 = (sub_ln964_1_fu_547_p2 + select_ln943_1_fu_535_p3);

assign add_ln964_2_fu_1182_p2 = (sub_ln964_2_fu_1177_p2 + select_ln943_2_fu_1170_p3);

assign add_ln964_fu_858_p2 = (sub_ln964_fu_853_p2 + select_ln943_fu_845_p3);

assign and_ln30_1_fu_1293_p2 = (grp_fu_221_p2 & and_ln30_fu_1287_p2);

assign and_ln30_fu_1287_p2 = (or_ln30_fu_1279_p2 & or_ln30_1_fu_1283_p2);

assign and_ln949_1_fu_377_p2 = (trunc_ln949_fu_373_p1 & p_Val2_s_reg_1304);

assign and_ln949_2_fu_727_p2 = (xor_ln949_fu_707_p2 & p_Result_23_fu_713_p3);

assign and_ln949_3_fu_443_p2 = (xor_ln949_1_fu_424_p2 & p_Result_26_fu_430_p3);

assign and_ln949_4_fu_1005_p2 = (or_ln949_fu_999_p2 & m_22_fu_919_p3);

assign and_ln949_5_fu_1045_p2 = (xor_ln949_2_fu_1025_p2 & p_Result_31_fu_1031_p3);

assign and_ln949_fu_687_p2 = (or_ln949_4_fu_681_p2 & m_19_fu_601_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((i_empty_n == 1'b0) | (projectionToRow_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln744_1_fu_753_p1 = LD_1_reg_1360;

assign bitcast_ln744_fu_887_p1 = LD_fu_883_p1;

assign data_V_1_fu_1211_p3 = ((icmp_ln935_1_reg_1422[0:0] == 1'b1) ? 31'd0 : LD_2_fu_1207_p1);

assign data_V_fu_1143_p1 = dc_reg_1417;

assign grp_fu_221_p0 = p_Result_28_fu_1154_p3;

assign grp_fu_221_p1 = p_Result_33_fu_1222_p3;

assign icmp_ln28_fu_248_p2 = ((ap_phi_mux_j_phi_fu_209_p4 == num_points_load_reg_1330) ? 1'b1 : 1'b0);

assign icmp_ln30_1_fu_1261_p2 = ((trunc_ln30_fu_1150_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_2_fu_1267_p2 = ((tmp_6_fu_1245_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln30_3_fu_1273_p2 = ((trunc_ln30_1_fu_1218_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_1255_p2 = ((tmp_5_fu_1235_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_899_p2 = ((start_value_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_769_p2 = ((z_bits_reg_1365 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_1_fu_336_p2 = (($signed(tmp_44_fu_326_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_2_fu_967_p2 = (($signed(tmp_48_fu_957_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_649_p2 = (($signed(tmp_41_fu_639_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_1_fu_410_p2 = ((or_ln949_1_fu_402_p3 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_2_fu_1011_p2 = ((and_ln949_4_fu_1005_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_693_p2 = ((and_ln949_fu_687_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_437_p2 = (($signed(lsb_index_1_fu_320_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_2_fu_1039_p2 = (($signed(lsb_index_2_fu_951_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_721_p2 = (($signed(lsb_index_fu_633_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_fu_225_p1 = i_dout;


always @ (p_Result_25_fu_297_p4) begin
    if (p_Result_25_fu_297_p4[0] == 1'b1) begin
        l_1_fu_306_p3 = 32'd0;
    end else if (p_Result_25_fu_297_p4[1] == 1'b1) begin
        l_1_fu_306_p3 = 32'd1;
    end else if (p_Result_25_fu_297_p4[2] == 1'b1) begin
        l_1_fu_306_p3 = 32'd2;
    end else if (p_Result_25_fu_297_p4[3] == 1'b1) begin
        l_1_fu_306_p3 = 32'd3;
    end else if (p_Result_25_fu_297_p4[4] == 1'b1) begin
        l_1_fu_306_p3 = 32'd4;
    end else if (p_Result_25_fu_297_p4[5] == 1'b1) begin
        l_1_fu_306_p3 = 32'd5;
    end else if (p_Result_25_fu_297_p4[6] == 1'b1) begin
        l_1_fu_306_p3 = 32'd6;
    end else if (p_Result_25_fu_297_p4[7] == 1'b1) begin
        l_1_fu_306_p3 = 32'd7;
    end else if (p_Result_25_fu_297_p4[8] == 1'b1) begin
        l_1_fu_306_p3 = 32'd8;
    end else if (p_Result_25_fu_297_p4[9] == 1'b1) begin
        l_1_fu_306_p3 = 32'd9;
    end else if (p_Result_25_fu_297_p4[10] == 1'b1) begin
        l_1_fu_306_p3 = 32'd10;
    end else if (p_Result_25_fu_297_p4[11] == 1'b1) begin
        l_1_fu_306_p3 = 32'd11;
    end else if (p_Result_25_fu_297_p4[12] == 1'b1) begin
        l_1_fu_306_p3 = 32'd12;
    end else if (p_Result_25_fu_297_p4[13] == 1'b1) begin
        l_1_fu_306_p3 = 32'd13;
    end else if (p_Result_25_fu_297_p4[14] == 1'b1) begin
        l_1_fu_306_p3 = 32'd14;
    end else if (p_Result_25_fu_297_p4[15] == 1'b1) begin
        l_1_fu_306_p3 = 32'd15;
    end else if (p_Result_25_fu_297_p4[16] == 1'b1) begin
        l_1_fu_306_p3 = 32'd16;
    end else if (p_Result_25_fu_297_p4[17] == 1'b1) begin
        l_1_fu_306_p3 = 32'd17;
    end else if (p_Result_25_fu_297_p4[18] == 1'b1) begin
        l_1_fu_306_p3 = 32'd18;
    end else if (p_Result_25_fu_297_p4[19] == 1'b1) begin
        l_1_fu_306_p3 = 32'd19;
    end else if (p_Result_25_fu_297_p4[20] == 1'b1) begin
        l_1_fu_306_p3 = 32'd20;
    end else if (p_Result_25_fu_297_p4[21] == 1'b1) begin
        l_1_fu_306_p3 = 32'd21;
    end else if (p_Result_25_fu_297_p4[22] == 1'b1) begin
        l_1_fu_306_p3 = 32'd22;
    end else if (p_Result_25_fu_297_p4[23] == 1'b1) begin
        l_1_fu_306_p3 = 32'd23;
    end else if (p_Result_25_fu_297_p4[24] == 1'b1) begin
        l_1_fu_306_p3 = 32'd24;
    end else if (p_Result_25_fu_297_p4[25] == 1'b1) begin
        l_1_fu_306_p3 = 32'd25;
    end else if (p_Result_25_fu_297_p4[26] == 1'b1) begin
        l_1_fu_306_p3 = 32'd26;
    end else if (p_Result_25_fu_297_p4[27] == 1'b1) begin
        l_1_fu_306_p3 = 32'd27;
    end else if (p_Result_25_fu_297_p4[28] == 1'b1) begin
        l_1_fu_306_p3 = 32'd28;
    end else if (p_Result_25_fu_297_p4[29] == 1'b1) begin
        l_1_fu_306_p3 = 32'd29;
    end else if (p_Result_25_fu_297_p4[30] == 1'b1) begin
        l_1_fu_306_p3 = 32'd30;
    end else if (p_Result_25_fu_297_p4[31] == 1'b1) begin
        l_1_fu_306_p3 = 32'd31;
    end else begin
        l_1_fu_306_p3 = 32'd32;
    end
end


always @ (p_Result_30_fu_927_p4) begin
    if (p_Result_30_fu_927_p4[0] == 1'b1) begin
        l_2_fu_937_p3 = 32'd0;
    end else if (p_Result_30_fu_927_p4[1] == 1'b1) begin
        l_2_fu_937_p3 = 32'd1;
    end else if (p_Result_30_fu_927_p4[2] == 1'b1) begin
        l_2_fu_937_p3 = 32'd2;
    end else if (p_Result_30_fu_927_p4[3] == 1'b1) begin
        l_2_fu_937_p3 = 32'd3;
    end else if (p_Result_30_fu_927_p4[4] == 1'b1) begin
        l_2_fu_937_p3 = 32'd4;
    end else if (p_Result_30_fu_927_p4[5] == 1'b1) begin
        l_2_fu_937_p3 = 32'd5;
    end else if (p_Result_30_fu_927_p4[6] == 1'b1) begin
        l_2_fu_937_p3 = 32'd6;
    end else if (p_Result_30_fu_927_p4[7] == 1'b1) begin
        l_2_fu_937_p3 = 32'd7;
    end else if (p_Result_30_fu_927_p4[8] == 1'b1) begin
        l_2_fu_937_p3 = 32'd8;
    end else if (p_Result_30_fu_927_p4[9] == 1'b1) begin
        l_2_fu_937_p3 = 32'd9;
    end else if (p_Result_30_fu_927_p4[10] == 1'b1) begin
        l_2_fu_937_p3 = 32'd10;
    end else if (p_Result_30_fu_927_p4[11] == 1'b1) begin
        l_2_fu_937_p3 = 32'd11;
    end else if (p_Result_30_fu_927_p4[12] == 1'b1) begin
        l_2_fu_937_p3 = 32'd12;
    end else if (p_Result_30_fu_927_p4[13] == 1'b1) begin
        l_2_fu_937_p3 = 32'd13;
    end else if (p_Result_30_fu_927_p4[14] == 1'b1) begin
        l_2_fu_937_p3 = 32'd14;
    end else if (p_Result_30_fu_927_p4[15] == 1'b1) begin
        l_2_fu_937_p3 = 32'd15;
    end else if (p_Result_30_fu_927_p4[16] == 1'b1) begin
        l_2_fu_937_p3 = 32'd16;
    end else if (p_Result_30_fu_927_p4[17] == 1'b1) begin
        l_2_fu_937_p3 = 32'd17;
    end else if (p_Result_30_fu_927_p4[18] == 1'b1) begin
        l_2_fu_937_p3 = 32'd18;
    end else if (p_Result_30_fu_927_p4[19] == 1'b1) begin
        l_2_fu_937_p3 = 32'd19;
    end else if (p_Result_30_fu_927_p4[20] == 1'b1) begin
        l_2_fu_937_p3 = 32'd20;
    end else if (p_Result_30_fu_927_p4[21] == 1'b1) begin
        l_2_fu_937_p3 = 32'd21;
    end else if (p_Result_30_fu_927_p4[22] == 1'b1) begin
        l_2_fu_937_p3 = 32'd22;
    end else if (p_Result_30_fu_927_p4[23] == 1'b1) begin
        l_2_fu_937_p3 = 32'd23;
    end else if (p_Result_30_fu_927_p4[24] == 1'b1) begin
        l_2_fu_937_p3 = 32'd24;
    end else if (p_Result_30_fu_927_p4[25] == 1'b1) begin
        l_2_fu_937_p3 = 32'd25;
    end else if (p_Result_30_fu_927_p4[26] == 1'b1) begin
        l_2_fu_937_p3 = 32'd26;
    end else if (p_Result_30_fu_927_p4[27] == 1'b1) begin
        l_2_fu_937_p3 = 32'd27;
    end else if (p_Result_30_fu_927_p4[28] == 1'b1) begin
        l_2_fu_937_p3 = 32'd28;
    end else if (p_Result_30_fu_927_p4[29] == 1'b1) begin
        l_2_fu_937_p3 = 32'd29;
    end else if (p_Result_30_fu_927_p4[30] == 1'b1) begin
        l_2_fu_937_p3 = 32'd30;
    end else if (p_Result_30_fu_927_p4[31] == 1'b1) begin
        l_2_fu_937_p3 = 32'd31;
    end else begin
        l_2_fu_937_p3 = 32'd32;
    end
end


always @ (p_Result_22_fu_609_p4) begin
    if (p_Result_22_fu_609_p4[0] == 1'b1) begin
        l_fu_619_p3 = 32'd0;
    end else if (p_Result_22_fu_609_p4[1] == 1'b1) begin
        l_fu_619_p3 = 32'd1;
    end else if (p_Result_22_fu_609_p4[2] == 1'b1) begin
        l_fu_619_p3 = 32'd2;
    end else if (p_Result_22_fu_609_p4[3] == 1'b1) begin
        l_fu_619_p3 = 32'd3;
    end else if (p_Result_22_fu_609_p4[4] == 1'b1) begin
        l_fu_619_p3 = 32'd4;
    end else if (p_Result_22_fu_609_p4[5] == 1'b1) begin
        l_fu_619_p3 = 32'd5;
    end else if (p_Result_22_fu_609_p4[6] == 1'b1) begin
        l_fu_619_p3 = 32'd6;
    end else if (p_Result_22_fu_609_p4[7] == 1'b1) begin
        l_fu_619_p3 = 32'd7;
    end else if (p_Result_22_fu_609_p4[8] == 1'b1) begin
        l_fu_619_p3 = 32'd8;
    end else if (p_Result_22_fu_609_p4[9] == 1'b1) begin
        l_fu_619_p3 = 32'd9;
    end else if (p_Result_22_fu_609_p4[10] == 1'b1) begin
        l_fu_619_p3 = 32'd10;
    end else if (p_Result_22_fu_609_p4[11] == 1'b1) begin
        l_fu_619_p3 = 32'd11;
    end else if (p_Result_22_fu_609_p4[12] == 1'b1) begin
        l_fu_619_p3 = 32'd12;
    end else if (p_Result_22_fu_609_p4[13] == 1'b1) begin
        l_fu_619_p3 = 32'd13;
    end else if (p_Result_22_fu_609_p4[14] == 1'b1) begin
        l_fu_619_p3 = 32'd14;
    end else if (p_Result_22_fu_609_p4[15] == 1'b1) begin
        l_fu_619_p3 = 32'd15;
    end else if (p_Result_22_fu_609_p4[16] == 1'b1) begin
        l_fu_619_p3 = 32'd16;
    end else if (p_Result_22_fu_609_p4[17] == 1'b1) begin
        l_fu_619_p3 = 32'd17;
    end else if (p_Result_22_fu_609_p4[18] == 1'b1) begin
        l_fu_619_p3 = 32'd18;
    end else if (p_Result_22_fu_609_p4[19] == 1'b1) begin
        l_fu_619_p3 = 32'd19;
    end else if (p_Result_22_fu_609_p4[20] == 1'b1) begin
        l_fu_619_p3 = 32'd20;
    end else if (p_Result_22_fu_609_p4[21] == 1'b1) begin
        l_fu_619_p3 = 32'd21;
    end else if (p_Result_22_fu_609_p4[22] == 1'b1) begin
        l_fu_619_p3 = 32'd22;
    end else if (p_Result_22_fu_609_p4[23] == 1'b1) begin
        l_fu_619_p3 = 32'd23;
    end else if (p_Result_22_fu_609_p4[24] == 1'b1) begin
        l_fu_619_p3 = 32'd24;
    end else if (p_Result_22_fu_609_p4[25] == 1'b1) begin
        l_fu_619_p3 = 32'd25;
    end else if (p_Result_22_fu_609_p4[26] == 1'b1) begin
        l_fu_619_p3 = 32'd26;
    end else if (p_Result_22_fu_609_p4[27] == 1'b1) begin
        l_fu_619_p3 = 32'd27;
    end else if (p_Result_22_fu_609_p4[28] == 1'b1) begin
        l_fu_619_p3 = 32'd28;
    end else if (p_Result_22_fu_609_p4[29] == 1'b1) begin
        l_fu_619_p3 = 32'd29;
    end else if (p_Result_22_fu_609_p4[30] == 1'b1) begin
        l_fu_619_p3 = 32'd30;
    end else if (p_Result_22_fu_609_p4[31] == 1'b1) begin
        l_fu_619_p3 = 32'd31;
    end else begin
        l_fu_619_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_320_p2 = ($signed(sub_ln944_1_fu_314_p2) + $signed(32'd4294967272));

assign lsb_index_2_fu_951_p2 = ($signed(sub_ln944_2_fu_945_p2) + $signed(32'd4294967272));

assign lsb_index_fu_633_p2 = ($signed(sub_ln944_fu_627_p2) + $signed(32'd4294967272));

assign lshr_ln947_1_fu_356_p2 = 32'd4294967295 >> zext_ln947_1_fu_352_p1;

assign lshr_ln947_2_fu_987_p2 = 32'd4294967295 >> zext_ln947_2_fu_983_p1;

assign lshr_ln947_fu_669_p2 = 32'd4294967295 >> zext_ln947_fu_665_p1;

assign lshr_ln958_1_fu_482_p2 = m_13_cast_i_reg_1340 >> zext_ln958_1_fu_478_p1;

assign lshr_ln958_2_fu_1089_p2 = zext_ln959_3_fu_1051_p1 >> zext_ln958_2_fu_1085_p1;

assign lshr_ln958_fu_801_p2 = zext_ln959_fu_774_p1 >> zext_ln958_fu_797_p1;

assign lshr_ln_fu_270_p4 = {{add_ln29_fu_265_p2[15:13]}};

assign m_12_fu_495_p3 = ((icmp_ln958_1_fu_437_p2[0:0] == 1'b1) ? lshr_ln958_1_fu_482_p2 : shl_ln959_1_fu_459_p2);

assign m_13_cast_i_fu_238_p1 = p_Val2_s_reg_1304;

assign m_13_fu_507_p2 = (m_12_fu_495_p3 + zext_ln961_1_fu_503_p1);

assign m_16_fu_1103_p3 = ((icmp_ln958_2_fu_1039_p2[0:0] == 1'b1) ? lshr_ln958_2_fu_1089_p2 : shl_ln959_2_fu_1065_p2);

assign m_17_fu_1115_p2 = (m_16_fu_1103_p3 + zext_ln961_2_fu_1111_p1);

assign m_19_fu_601_p3 = ((p_Result_21_fu_587_p3[0:0] == 1'b1) ? tmp_V_fu_595_p2 : z_bits_fu_583_p1);

assign m_20_fu_823_p4 = {{m_8_fu_817_p2[63:1]}};

assign m_21_fu_513_p4 = {{m_13_fu_507_p2[63:1]}};

assign m_22_fu_919_p3 = ((p_Result_29_fu_905_p3[0:0] == 1'b1) ? tmp_V_4_fu_913_p2 : start_value_i);

assign m_8_fu_817_p2 = (m_fu_807_p3 + zext_ln961_fu_814_p1);

assign m_fu_807_p3 = ((icmp_ln958_reg_1387[0:0] == 1'b1) ? lshr_ln958_fu_801_p2 : shl_ln959_fu_786_p2);

assign num_points_address1 = idxprom_i_fu_225_p1;

assign or_ln30_1_fu_1283_p2 = (icmp_ln30_3_reg_1472 | icmp_ln30_2_reg_1467);

assign or_ln30_fu_1279_p2 = (icmp_ln30_reg_1457 | icmp_ln30_1_reg_1462);

assign or_ln949_1_fu_402_p3 = {{tmp_fu_392_p4}, {or_ln949_3_fu_386_p2}};

assign or_ln949_3_fu_386_p2 = (trunc_ln949_1_fu_382_p1 | and_ln949_1_fu_377_p2);

assign or_ln949_4_fu_681_p2 = (shl_ln949_fu_675_p2 | lshr_ln947_fu_669_p2);

assign or_ln949_fu_999_p2 = (shl_ln949_2_fu_993_p2 | lshr_ln947_2_fu_987_p2);

assign p_Result_10_fu_362_p2 = (projectionToRow_cast1_i_reg_1322 & lshr_ln947_1_fu_356_p2);

assign p_Result_12_fu_527_p3 = m_13_fu_507_p2[32'd25];

assign p_Result_21_fu_587_p3 = points_q1[32'd31];

integer ap_tvar_int_0;

always @ (m_19_fu_601_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_22_fu_609_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_22_fu_609_p4[ap_tvar_int_0] = m_19_fu_601_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_23_fu_713_p3 = m_19_fu_601_p3[lsb_index_fu_633_p2];

assign p_Result_24_fu_871_p5 = {{zext_ln962_fu_833_p1[63:32]}, {tmp_i_fu_864_p3}, {zext_ln962_fu_833_p1[22:0]}};

integer ap_tvar_int_1;

always @ (projectionToRow_cast1_i_reg_1322) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_25_fu_297_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_25_fu_297_p4[ap_tvar_int_1] = projectionToRow_cast1_i_reg_1322[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_26_fu_430_p3 = projectionToRow_cast1_i_reg_1322[lsb_index_1_fu_320_p2];

assign p_Result_27_fu_567_p5 = {{zext_ln962_1_fu_523_p1[63:32]}, {tmp_3_i_fu_559_p3}, {zext_ln962_1_fu_523_p1[22:0]}};

assign p_Result_28_fu_1154_p3 = {{1'd0}, {trunc_ln368_fu_1146_p1}};

assign p_Result_29_fu_905_p3 = start_value_i[32'd31];

integer ap_tvar_int_2;

always @ (m_22_fu_919_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_30_fu_927_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_30_fu_927_p4[ap_tvar_int_2] = m_22_fu_919_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_31_fu_1031_p3 = m_22_fu_919_p3[lsb_index_2_fu_951_p2];

assign p_Result_32_fu_1195_p5 = {{zext_ln962_2_fu_1167_p1[63:32]}, {tmp_5_i_fu_1188_p3}, {zext_ln962_2_fu_1167_p1[22:0]}};

assign p_Result_33_fu_1222_p3 = {{1'd0}, {data_V_1_fu_1211_p3}};

assign p_Result_s_fu_837_p3 = m_8_fu_817_p2[32'd25];

assign points_address1 = zext_ln29_fu_292_p1;

assign projectionToRow_cast1_i_fu_230_p1 = p_Val2_s_reg_1304;

assign retval_0_i81_i_fu_756_p3 = ((tobool_i19_i_reg_1335[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_1_fu_753_p1);

assign select_ln935_fu_891_p3 = ((icmp_ln935_fu_769_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_887_p1);

assign select_ln943_1_fu_535_p3 = ((p_Result_12_fu_527_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_2_fu_1170_p3 = ((p_Result_18_reg_1437[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_845_p3 = ((p_Result_s_fu_837_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_1_fu_464_p3 = ((icmp_ln946_1_fu_336_p2[0:0] == 1'b1) ? icmp_ln949_1_fu_410_p2 : p_Result_26_fu_430_p3);

assign select_ln946_2_fu_1071_p3 = ((icmp_ln946_2_fu_967_p2[0:0] == 1'b1) ? icmp_ln949_2_fu_1011_p2 : p_Result_31_fu_1031_p3);

assign select_ln946_fu_733_p3 = ((icmp_ln946_fu_649_p2[0:0] == 1'b1) ? icmp_ln949_fu_693_p2 : p_Result_23_fu_713_p3);

assign select_ln958_2_fu_487_p3 = ((icmp_ln958_1_fu_437_p2[0:0] == 1'b1) ? select_ln946_1_fu_464_p3 : and_ln949_3_fu_443_p2);

assign select_ln958_4_fu_1095_p3 = ((icmp_ln958_2_fu_1039_p2[0:0] == 1'b1) ? select_ln946_2_fu_1071_p3 : and_ln949_5_fu_1045_p2);

assign select_ln958_fu_741_p3 = ((icmp_ln958_fu_721_p2[0:0] == 1'b1) ? select_ln946_fu_733_p3 : and_ln949_2_fu_727_p2);

assign shl_ln29_1_fu_257_p3 = {{trunc_ln29_fu_253_p1}, {4'd0}};

assign shl_ln949_1_fu_367_p2 = 32'd1 << lsb_index_1_fu_320_p2;

assign shl_ln949_2_fu_993_p2 = 32'd1 << lsb_index_2_fu_951_p2;

assign shl_ln949_fu_675_p2 = 32'd1 << lsb_index_fu_633_p2;

assign shl_ln959_1_fu_459_p2 = m_13_cast_i_reg_1340 << zext_ln959_2_fu_455_p1;

assign shl_ln959_2_fu_1065_p2 = zext_ln959_3_fu_1051_p1 << zext_ln959_4_fu_1061_p1;

assign shl_ln959_fu_786_p2 = zext_ln959_fu_774_p1 << zext_ln959_1_fu_782_p1;

assign shl_ln_fu_241_p3 = {{i_1_reg_1312}, {13'd0}};

assign sub_ln703_fu_1299_p2 = (z_bits_reg_1365_pp0_iter1_reg - projectionToRow_cast1_i_reg_1322);

assign sub_ln944_1_fu_314_p2 = (32'd32 - l_1_fu_306_p3);

assign sub_ln944_2_fu_945_p2 = (32'd32 - l_2_fu_937_p3);

assign sub_ln944_fu_627_p2 = (32'd32 - l_fu_619_p3);

assign sub_ln947_1_fu_346_p2 = ($signed(6'd57) - $signed(trunc_ln947_1_fu_342_p1));

assign sub_ln947_2_fu_977_p2 = ($signed(6'd57) - $signed(trunc_ln947_2_fu_973_p1));

assign sub_ln947_fu_659_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_655_p1));

assign sub_ln959_1_fu_449_p2 = (32'd25 - sub_ln944_1_fu_314_p2);

assign sub_ln959_2_fu_1055_p2 = (32'd25 - sub_ln944_2_fu_945_p2);

assign sub_ln959_fu_777_p2 = (32'd25 - sub_ln944_reg_1381);

assign sub_ln964_1_fu_547_p2 = (8'd12 - trunc_ln943_1_fu_543_p1);

assign sub_ln964_2_fu_1177_p2 = (8'd12 - trunc_ln943_2_reg_1442);

assign sub_ln964_fu_853_p2 = (8'd12 - trunc_ln943_reg_1397);

assign tmp_3_i_fu_559_p3 = {{1'd0}, {add_ln964_1_fu_553_p2}};

assign tmp_41_fu_639_p4 = {{lsb_index_fu_633_p2[31:1]}};

assign tmp_42_fu_699_p3 = lsb_index_fu_633_p2[32'd31];

assign tmp_44_fu_326_p4 = {{lsb_index_1_fu_320_p2[31:1]}};

assign tmp_45_fu_416_p3 = lsb_index_1_fu_320_p2[32'd31];

assign tmp_48_fu_957_p4 = {{lsb_index_2_fu_951_p2[31:1]}};

assign tmp_49_fu_1017_p3 = lsb_index_2_fu_951_p2[32'd31];

assign tmp_5_fu_1235_p4 = {{data_V_fu_1143_p1[30:23]}};

assign tmp_5_i_fu_1188_p3 = {{p_Result_29_reg_1427}, {add_ln964_2_fu_1182_p2}};

assign tmp_6_fu_1245_p4 = {{data_V_1_fu_1211_p3[30:23]}};

assign tmp_V_4_fu_913_p2 = (32'd0 - start_value_i);

assign tmp_V_fu_595_p2 = (32'd0 - z_bits_fu_583_p1);

assign tmp_fu_392_p4 = {{p_Result_10_fu_362_p2[31:26]}};

assign tmp_i_fu_864_p3 = {{p_Result_21_reg_1371}, {add_ln964_fu_858_p2}};

assign tmp_s_fu_284_p3 = {{lshr_ln_fu_270_p4}, {trunc_ln29_1_fu_280_p1}};

assign tobool_i19_i_fu_233_p2 = ((p_Val2_s_reg_1304 == 26'd0) ? 1'b1 : 1'b0);

assign trunc_ln29_1_fu_280_p1 = ap_phi_mux_j_phi_fu_209_p4[8:0];

assign trunc_ln29_fu_253_p1 = ap_phi_mux_j_phi_fu_209_p4[11:0];

assign trunc_ln30_1_fu_1218_p1 = data_V_1_fu_1211_p3[22:0];

assign trunc_ln30_fu_1150_p1 = data_V_fu_1143_p1[22:0];

assign trunc_ln368_fu_1146_p1 = data_V_fu_1143_p1[30:0];

assign trunc_ln943_1_fu_543_p1 = l_1_fu_306_p3[7:0];

assign trunc_ln943_2_fu_1139_p1 = l_2_fu_937_p3[7:0];

assign trunc_ln943_fu_749_p1 = l_fu_619_p3[7:0];

assign trunc_ln947_1_fu_342_p1 = sub_ln944_1_fu_314_p2[5:0];

assign trunc_ln947_2_fu_973_p1 = sub_ln944_2_fu_945_p2[5:0];

assign trunc_ln947_fu_655_p1 = sub_ln944_fu_627_p2[5:0];

assign trunc_ln949_1_fu_382_p1 = p_Result_10_fu_362_p2[25:0];

assign trunc_ln949_fu_373_p1 = shl_ln949_1_fu_367_p2[25:0];

assign xor_ln949_1_fu_424_p2 = (tmp_45_fu_416_p3 ^ 1'd1);

assign xor_ln949_2_fu_1025_p2 = (tmp_49_fu_1017_p3 ^ 1'd1);

assign xor_ln949_fu_707_p2 = (tmp_42_fu_699_p3 ^ 1'd1);

assign z_bits_fu_583_p1 = points_q1[31:0];

assign zext_ln29_fu_292_p1 = tmp_s_fu_284_p3;

assign zext_ln947_1_fu_352_p1 = sub_ln947_1_fu_346_p2;

assign zext_ln947_2_fu_983_p1 = sub_ln947_2_fu_977_p2;

assign zext_ln947_fu_665_p1 = sub_ln947_fu_659_p2;

assign zext_ln958_1_fu_478_p1 = add_ln958_1_fu_472_p2;

assign zext_ln958_2_fu_1085_p1 = add_ln958_2_fu_1079_p2;

assign zext_ln958_fu_797_p1 = add_ln958_fu_792_p2;

assign zext_ln959_1_fu_782_p1 = sub_ln959_fu_777_p2;

assign zext_ln959_2_fu_455_p1 = sub_ln959_1_fu_449_p2;

assign zext_ln959_3_fu_1051_p1 = m_22_fu_919_p3;

assign zext_ln959_4_fu_1061_p1 = sub_ln959_2_fu_1055_p2;

assign zext_ln959_fu_774_p1 = m_19_reg_1376;

assign zext_ln961_1_fu_503_p1 = select_ln958_2_fu_487_p3;

assign zext_ln961_2_fu_1111_p1 = select_ln958_4_fu_1095_p3;

assign zext_ln961_fu_814_p1 = select_ln958_reg_1392;

assign zext_ln962_1_fu_523_p1 = m_21_fu_513_p4;

assign zext_ln962_2_fu_1167_p1 = m_23_reg_1432;

assign zext_ln962_fu_833_p1 = m_20_fu_823_p4;

always @ (posedge ap_clk) begin
    projectionToRow_cast1_i_reg_1322[31:26] <= 6'b000000;
    m_13_cast_i_reg_1340[63:26] <= 38'b00000000000000000000000000000000000000;
    shl_ln_reg_1346[12:0] <= 13'b0000000000000;
end

endmodule //system_top_p_find_starting_index_and_value5
