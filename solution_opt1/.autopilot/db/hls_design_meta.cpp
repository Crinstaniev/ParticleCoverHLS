#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("points_address0", 12, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("points_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("points_q0", 128, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("points_address1", 12, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("points_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("points_q1", 128, hls_in, 0, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("num_points_address0", 3, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("num_points_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("num_points_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("num_points_address1", 3, hls_out, 1, "ap_memory", "MemPortADDR2", 1),
	Port_Property("num_points_ce1", 1, hls_out, 1, "ap_memory", "MemPortCE2", 1),
	Port_Property("num_points_q1", 32, hls_in, 1, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("patch_stream_V_din", 96, hls_out, 2, "ap_fifo", "fifo_data", 1),
	Port_Property("patch_stream_V_full_n", 1, hls_in, 2, "ap_fifo", "fifo_status", 1),
	Port_Property("patch_stream_V_write", 1, hls_out, 2, "ap_fifo", "fifo_update", 1),
};
const char* HLS_Design_Meta::dut_name = "system_top";
