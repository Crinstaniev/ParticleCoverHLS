-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_dataset_add_boundary_point is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataset_env_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dataset_env_10_ce0 : OUT STD_LOGIC;
    dataset_env_10_we0 : OUT STD_LOGIC;
    dataset_env_10_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_env_10_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_env_10_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dataset_env_10_ce1 : OUT STD_LOGIC;
    dataset_env_10_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_layer_num_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_layer_num_ce0 : OUT STD_LOGIC;
    dataset_array_layer_num_we0 : OUT STD_LOGIC;
    dataset_array_layer_num_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dataset_array_layer_num_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dataset_array_layer_num_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_layer_num_ce1 : OUT STD_LOGIC;
    dataset_array_layer_num_we1 : OUT STD_LOGIC;
    dataset_array_layer_num_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dataset_array_layer_num_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dataset_array_radius_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_radius_ce0 : OUT STD_LOGIC;
    dataset_array_radius_we0 : OUT STD_LOGIC;
    dataset_array_radius_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_radius_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_radius_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_radius_ce1 : OUT STD_LOGIC;
    dataset_array_radius_we1 : OUT STD_LOGIC;
    dataset_array_radius_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_radius_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_phi_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_phi_ce0 : OUT STD_LOGIC;
    dataset_array_phi_we0 : OUT STD_LOGIC;
    dataset_array_phi_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_phi_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_phi_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_phi_ce1 : OUT STD_LOGIC;
    dataset_array_phi_we1 : OUT STD_LOGIC;
    dataset_array_phi_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_phi_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_z_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_z_ce0 : OUT STD_LOGIC;
    dataset_array_z_we0 : OUT STD_LOGIC;
    dataset_array_z_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_z_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_z_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    dataset_array_z_ce1 : OUT STD_LOGIC;
    dataset_array_z_we1 : OUT STD_LOGIC;
    dataset_array_z_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataset_array_z_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataset_n_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dataset_n_points_ce0 : OUT STD_LOGIC;
    dataset_n_points_we0 : OUT STD_LOGIC;
    dataset_n_points_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dataset_n_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_50533_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_50533_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_50533_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_50533_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_50533_p_ce : OUT STD_LOGIC );
end;


architecture behav of system_top_dataset_add_boundary_point is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_BF1A36E2EB1C432D : STD_LOGIC_VECTOR (63 downto 0) := "1011111100011010001101101110001011101011000111000100001100101101";
    constant ap_const_lv64_3F1A36E2EB1C432D : STD_LOGIC_VECTOR (63 downto 0) := "0011111100011010001101101110001011101011000111000100001100101101";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_3E8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001111101000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv13_3E8 : STD_LOGIC_VECTOR (12 downto 0) := "0001111101000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_307 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_reg_320 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_reg_375 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_7_reg_386 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln60_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal icmp_ln97_reg_893 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_5_reg_715 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln63_fu_429_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln63_reg_722 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln63_1_fu_433_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln63_1_reg_728 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln60_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_reg_738_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_reg_738_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln64_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln64_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataset_n_points_addr_reg_752 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln65_1_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_reg_767 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_reg_767_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_reg_773 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_reg_773_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal i_9_fu_520_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_9_reg_779 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln77_1_fu_526_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln77_1_reg_784 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln77_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv35_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv35_reg_798 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal j_2_fu_547_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_2_reg_804 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln84_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln84_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln84_reg_813 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_2_fu_564_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_2_reg_819 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal dataset_array_layer_num_addr_2_reg_824 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_radius_addr_2_reg_829 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_phi_addr_3_reg_834 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_z_addr_2_reg_839 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln85_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln85_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal dataset_array_layer_num_addr_3_reg_849 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_radius_addr_3_reg_854 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_phi_addr_4_reg_859 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_z_addr_3_reg_864 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataset_array_z_load_reg_870 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state13_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal dataset_array_z_load_1_reg_877 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln86_1_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_1_reg_884 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state14_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal i_8_fu_693_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal icmp_ln97_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_893_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_893_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_reg_893_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal dataset_env_10_addr_1_reg_897 : STD_LOGIC_VECTOR (2 downto 0);
    signal dataset_env_10_addr_1_reg_897_pp2_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal dataset_env_10_addr_1_reg_897_pp2_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal dataset_env_10_addr_1_reg_897_pp2_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state17 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_i_phi_fu_311_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_phi_mul_phi_fu_324_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_6_reg_332 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal phi_mul1_reg_343 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvars_iv_in_reg_355 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal j_reg_364 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_k_phi_fu_379_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln77_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln88_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_7_cast_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln64_1_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_406_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal grp_fu_412_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln64_fu_455_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln65_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln65_fu_470_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln63_1_fu_481_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln63_fu_485_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln67_fu_496_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln67_1_fu_502_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln87_fu_570_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln87_fu_574_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln85_fu_593_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln88_fu_597_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln86_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln86_1_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_614_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln86_fu_624_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln86_1_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_631_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln86_1_fu_641_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln86_3_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln86_1_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln86_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_406_ce : STD_LOGIC;
    signal grp_fu_406_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp1_stage1_00001 : BOOLEAN;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component system_top_dadd_64ns_64ns_64_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component system_top_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_uitodp_64ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    dadd_64ns_64ns_64_4_full_dsp_1_U1 : component system_top_dadd_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_397_p0,
        din1 => grp_fu_397_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_397_p2);

    uitodp_64ns_64_2_no_dsp_1_U3 : component system_top_uitodp_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_412_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_412_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln84_fu_553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_subdone)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln84_fu_553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln77_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state17)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state17);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif (((icmp_ln77_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_6_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_6_reg_332 <= ap_const_lv3_0;
            elsif (((icmp_ln84_fu_553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_6_reg_332 <= i_9_reg_779;
            end if; 
        end if;
    end process;

    i_7_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_7_reg_386 <= ap_const_lv3_0;
            elsif (((icmp_ln97_fu_704_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i_7_reg_386 <= i_8_fu_693_p2;
            end if; 
        end if;
    end process;

    i_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_307 <= i_5_reg_715;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_307 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    indvars_iv_in_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                indvars_iv_in_reg_355 <= conv35_fu_543_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvars_iv_in_reg_355 <= add_ln84_reg_813;
            end if; 
        end if;
    end process;

    j_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j_reg_364 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                j_reg_364 <= j_2_reg_804;
            end if; 
        end if;
    end process;

    k_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                k_reg_375 <= k_2_reg_819;
            elsif (((icmp_ln84_fu_553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                k_reg_375 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                phi_mul1_reg_343 <= ap_const_lv13_0;
            elsif (((icmp_ln84_fu_553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                phi_mul1_reg_343 <= add_ln77_1_reg_784;
            end if; 
        end if;
    end process;

    phi_mul_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                phi_mul_reg_320 <= add_ln63_1_reg_728;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_reg_320 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln97_reg_893 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                reg_417 <= dataset_env_10_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                reg_417 <= dataset_env_10_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln63_1_reg_728 <= add_ln63_1_fu_433_p2;
                i_5_reg_715 <= i_5_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln77_1_reg_784 <= add_ln77_1_fu_526_p2;
                i_9_reg_779 <= i_9_fu_520_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln84_fu_553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                add_ln84_reg_813 <= add_ln84_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001))) then
                and_ln86_1_reg_884 <= and_ln86_1_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                conv35_reg_798 <= conv35_fu_543_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                dataset_array_layer_num_addr_2_reg_824 <= zext_ln87_fu_580_p1(13 - 1 downto 0);
                dataset_array_phi_addr_3_reg_834 <= zext_ln87_fu_580_p1(13 - 1 downto 0);
                dataset_array_radius_addr_2_reg_829 <= zext_ln87_fu_580_p1(13 - 1 downto 0);
                dataset_array_z_addr_2_reg_839 <= zext_ln87_fu_580_p1(13 - 1 downto 0);
                icmp_ln85_reg_845 <= icmp_ln85_fu_588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln85_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                dataset_array_layer_num_addr_3_reg_849 <= zext_ln88_fu_603_p1(13 - 1 downto 0);
                dataset_array_phi_addr_4_reg_859 <= zext_ln88_fu_603_p1(13 - 1 downto 0);
                dataset_array_radius_addr_3_reg_854 <= zext_ln88_fu_603_p1(13 - 1 downto 0);
                dataset_array_z_addr_3_reg_864 <= zext_ln88_fu_603_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then
                dataset_array_z_load_1_reg_877 <= dataset_array_z_q0;
                dataset_array_z_load_reg_870 <= dataset_array_z_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln97_fu_704_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                dataset_env_10_addr_1_reg_897 <= i_7_cast_fu_699_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                dataset_env_10_addr_1_reg_897_pp2_iter1_reg <= dataset_env_10_addr_1_reg_897;
                icmp_ln97_reg_893 <= icmp_ln97_fu_704_p2;
                icmp_ln97_reg_893_pp2_iter1_reg <= icmp_ln97_reg_893;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                dataset_env_10_addr_1_reg_897_pp2_iter2_reg <= dataset_env_10_addr_1_reg_897_pp2_iter1_reg;
                dataset_env_10_addr_1_reg_897_pp2_iter3_reg <= dataset_env_10_addr_1_reg_897_pp2_iter2_reg;
                icmp_ln97_reg_893_pp2_iter2_reg <= icmp_ln97_reg_893_pp2_iter1_reg;
                icmp_ln97_reg_893_pp2_iter3_reg <= icmp_ln97_reg_893_pp2_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_fu_439_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                dataset_n_points_addr_reg_752 <= ap_phi_mux_i_phi_fu_311_p4(3 - 1 downto 0);
                trunc_ln64_reg_742 <= trunc_ln64_fu_444_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln60_reg_738 <= icmp_ln60_fu_439_p2;
                icmp_ln60_reg_738_pp0_iter1_reg <= icmp_ln60_reg_738;
                icmp_ln60_reg_738_pp0_iter2_reg <= icmp_ln60_reg_738_pp0_iter1_reg;
                trunc_ln63_reg_722 <= trunc_ln63_fu_429_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                j_2_reg_804 <= j_2_fu_547_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                k_2_reg_819 <= k_2_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    zext_ln63_reg_767(12 downto 0) <= zext_ln63_fu_490_p1(12 downto 0);
                    zext_ln67_reg_773(12 downto 0) <= zext_ln67_fu_507_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    zext_ln63_reg_767_pp0_iter1_reg(12 downto 0) <= zext_ln63_reg_767(12 downto 0);
                    zext_ln67_reg_773_pp0_iter1_reg(12 downto 0) <= zext_ln67_reg_773(12 downto 0);
            end if;
        end if;
    end process;
    zext_ln63_reg_767(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln63_reg_767_pp0_iter1_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln67_reg_773(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln67_reg_773_pp0_iter1_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter1, icmp_ln60_fu_439_p2, ap_CS_fsm_state9, icmp_ln77_fu_532_p2, ap_CS_fsm_state11, icmp_ln84_fu_553_p2, ap_enable_reg_pp1_iter0, icmp_ln85_fu_588_p2, ap_enable_reg_pp2_iter0, icmp_ln97_fu_704_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp1_stage2_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_block_pp1_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln60_fu_439_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln60_fu_439_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln77_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln84_fu_553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln85_fu_588_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((icmp_ln85_fu_588_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((icmp_ln97_fu_704_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((icmp_ln97_fu_704_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln63_1_fu_433_p2 <= std_logic_vector(unsigned(ap_phi_mux_phi_mul_phi_fu_324_p4) + unsigned(ap_const_lv64_3E8));
    add_ln63_fu_485_p2 <= std_logic_vector(unsigned(trunc_ln63_reg_722) + unsigned(trunc_ln63_1_fu_481_p1));
    add_ln64_1_fu_448_p2 <= std_logic_vector(unsigned(trunc_ln64_reg_742) + unsigned(ap_const_lv32_1));
    add_ln67_1_fu_502_p2 <= std_logic_vector(unsigned(trunc_ln63_reg_722) + unsigned(add_ln67_fu_496_p2));
    add_ln67_fu_496_p2 <= std_logic_vector(unsigned(trunc_ln63_1_fu_481_p1) + unsigned(ap_const_lv13_1));
    add_ln77_1_fu_526_p2 <= std_logic_vector(unsigned(phi_mul1_reg_343) + unsigned(ap_const_lv13_3E8));
    add_ln84_fu_558_p2 <= std_logic_vector(unsigned(indvars_iv_in_reg_355) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    add_ln87_fu_574_p2 <= std_logic_vector(unsigned(phi_mul1_reg_343) + unsigned(trunc_ln87_fu_570_p1));
    add_ln88_fu_597_p2 <= std_logic_vector(unsigned(phi_mul1_reg_343) + unsigned(trunc_ln85_fu_593_p1));
    and_ln86_1_fu_687_p2 <= (grp_fu_50533_p_dout0 and and_ln86_fu_681_p2);
    and_ln86_fu_681_p2 <= (or_ln86_fu_657_p2 and or_ln86_1_fu_675_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(9);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state11 <= ap_CS_fsm(6);
    ap_CS_fsm_state16 <= ap_CS_fsm(10);
    ap_CS_fsm_state22 <= ap_CS_fsm(12);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln60_fu_439_p2)
    begin
        if ((icmp_ln60_fu_439_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(icmp_ln85_fu_588_p2)
    begin
        if ((icmp_ln85_fu_588_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state17_assign_proc : process(icmp_ln97_fu_704_p2)
    begin
        if ((icmp_ln97_fu_704_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_311_p4_assign_proc : process(i_reg_307, icmp_ln60_reg_738, i_5_reg_715, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_311_p4 <= i_5_reg_715;
        else 
            ap_phi_mux_i_phi_fu_311_p4 <= i_reg_307;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_379_p4_assign_proc : process(k_reg_375, k_2_reg_819, ap_CS_fsm_pp1_stage0, icmp_ln85_reg_845, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_k_phi_fu_379_p4 <= k_2_reg_819;
        else 
            ap_phi_mux_k_phi_fu_379_p4 <= k_reg_375;
        end if; 
    end process;


    ap_phi_mux_phi_mul_phi_fu_324_p4_assign_proc : process(phi_mul_reg_320, icmp_ln60_reg_738, ap_CS_fsm_pp0_stage0, add_ln63_1_reg_728, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_phi_mul_phi_fu_324_p4 <= add_ln63_1_reg_728;
        else 
            ap_phi_mux_phi_mul_phi_fu_324_p4 <= phi_mul_reg_320;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln65_1_fu_476_p1 <= xor_ln65_fu_470_p2;
    bitcast_ln65_fu_466_p1 <= dataset_env_10_q0;
    bitcast_ln86_1_fu_628_p1 <= dataset_array_z_load_1_reg_877;
    bitcast_ln86_fu_611_p1 <= dataset_array_z_load_reg_870;
        conv35_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dataset_n_points_q0),64));


    dataset_array_layer_num_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, zext_ln67_fu_507_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_layer_num_addr_3_reg_849, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_layer_num_address0 <= dataset_array_layer_num_addr_3_reg_849;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_layer_num_address0 <= zext_ln67_fu_507_p1(13 - 1 downto 0);
        else 
            dataset_array_layer_num_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_layer_num_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, zext_ln63_fu_490_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_layer_num_addr_2_reg_824, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_layer_num_address1 <= dataset_array_layer_num_addr_2_reg_824;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_layer_num_address1 <= zext_ln63_fu_490_p1(13 - 1 downto 0);
        else 
            dataset_array_layer_num_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_layer_num_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_layer_num_ce0 <= ap_const_logic_1;
        else 
            dataset_array_layer_num_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_layer_num_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_layer_num_ce1 <= ap_const_logic_1;
        else 
            dataset_array_layer_num_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_layer_num_d0_assign_proc : process(dataset_array_layer_num_q1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1, add_ln64_1_fu_448_p2)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_layer_num_d0 <= dataset_array_layer_num_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_layer_num_d0 <= add_ln64_1_fu_448_p2;
        else 
            dataset_array_layer_num_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_layer_num_d1_assign_proc : process(dataset_array_layer_num_q0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1, add_ln64_1_fu_448_p2)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_layer_num_d1 <= dataset_array_layer_num_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_layer_num_d1 <= add_ln64_1_fu_448_p2;
        else 
            dataset_array_layer_num_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_layer_num_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln60_reg_738, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_layer_num_we0 <= ap_const_logic_1;
        else 
            dataset_array_layer_num_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_layer_num_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln60_reg_738, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_layer_num_we1 <= ap_const_logic_1;
        else 
            dataset_array_layer_num_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_phi_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, zext_ln67_fu_507_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_phi_addr_3_reg_834, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_phi_mux_phi_mul_phi_fu_324_p4, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_phi_address0 <= dataset_array_phi_addr_3_reg_834;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_phi_address0 <= zext_ln67_fu_507_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_phi_address0 <= ap_phi_mux_phi_mul_phi_fu_324_p4(13 - 1 downto 0);
        else 
            dataset_array_phi_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_phi_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, zext_ln63_fu_490_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_phi_addr_4_reg_859, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_phi_address1 <= dataset_array_phi_addr_4_reg_859;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_phi_address1 <= zext_ln63_fu_490_p1(13 - 1 downto 0);
        else 
            dataset_array_phi_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_phi_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_phi_ce0 <= ap_const_logic_1;
        else 
            dataset_array_phi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_phi_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_phi_ce1 <= ap_const_logic_1;
        else 
            dataset_array_phi_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_phi_d0_assign_proc : process(dataset_array_phi_q0, dataset_array_phi_q1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_phi_d0 <= dataset_array_phi_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_array_phi_d0 <= dataset_array_phi_q0;
        else 
            dataset_array_phi_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dataset_array_phi_d1 <= dataset_array_phi_q0;

    dataset_array_phi_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln60_reg_738, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_phi_we0 <= ap_const_logic_1;
        else 
            dataset_array_phi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_phi_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln60_reg_738, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_array_phi_we1 <= ap_const_logic_1;
        else 
            dataset_array_phi_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_radius_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln67_reg_773, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_radius_addr_3_reg_854, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_radius_address0 <= dataset_array_radius_addr_3_reg_854;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataset_array_radius_address0 <= zext_ln67_reg_773(13 - 1 downto 0);
        else 
            dataset_array_radius_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_radius_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln63_reg_767, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_radius_addr_2_reg_829, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp1_stage2)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            dataset_array_radius_address1 <= dataset_array_radius_addr_2_reg_829;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataset_array_radius_address1 <= zext_ln63_reg_767(13 - 1 downto 0);
        else 
            dataset_array_radius_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_radius_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)))) then 
            dataset_array_radius_ce0 <= ap_const_logic_1;
        else 
            dataset_array_radius_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_radius_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)))) then 
            dataset_array_radius_ce1 <= ap_const_logic_1;
        else 
            dataset_array_radius_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_radius_d0_assign_proc : process(dataset_array_radius_q1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, grp_fu_412_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_radius_d0 <= dataset_array_radius_q1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataset_array_radius_d0 <= grp_fu_412_p1;
        else 
            dataset_array_radius_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_radius_d1_assign_proc : process(dataset_array_radius_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, grp_fu_412_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_radius_d1 <= dataset_array_radius_q0;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataset_array_radius_d1 <= grp_fu_412_p1;
        else 
            dataset_array_radius_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_radius_we0_assign_proc : process(icmp_ln60_reg_738, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataset_array_radius_we0 <= ap_const_logic_1;
        else 
            dataset_array_radius_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_radius_we1_assign_proc : process(icmp_ln60_reg_738, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, and_ln86_1_reg_884, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln86_1_reg_884) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataset_array_radius_we1 <= ap_const_logic_1;
        else 
            dataset_array_radius_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_z_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, zext_ln63_reg_767_pp0_iter1_reg, zext_ln67_reg_773_pp0_iter1_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_z_addr_2_reg_839, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln88_fu_603_p1, ap_block_pp1_stage2)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            dataset_array_z_address0 <= dataset_array_z_addr_2_reg_839;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            dataset_array_z_address0 <= zext_ln88_fu_603_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            dataset_array_z_address0 <= zext_ln67_reg_773_pp0_iter1_reg(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataset_array_z_address0 <= zext_ln63_reg_767_pp0_iter1_reg(13 - 1 downto 0);
        else 
            dataset_array_z_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_z_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, dataset_array_z_addr_3_reg_864, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage0, zext_ln87_fu_580_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                dataset_array_z_address1 <= dataset_array_z_addr_3_reg_864;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
                dataset_array_z_address1 <= zext_ln87_fu_580_p1(13 - 1 downto 0);
            else 
                dataset_array_z_address1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            dataset_array_z_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dataset_array_z_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            dataset_array_z_ce0 <= ap_const_logic_1;
        else 
            dataset_array_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_z_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            dataset_array_z_ce1 <= ap_const_logic_1;
        else 
            dataset_array_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_z_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp1_iter0, dataset_array_z_load_1_reg_877, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp1_stage2, grp_fu_397_p2)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            dataset_array_z_d0 <= dataset_array_z_load_1_reg_877;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            dataset_array_z_d0 <= grp_fu_397_p2;
        else 
            dataset_array_z_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dataset_array_z_d1 <= dataset_array_z_load_reg_870;

    dataset_array_z_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln60_reg_738_pp0_iter1_reg, icmp_ln60_reg_738_pp0_iter2_reg, ap_enable_reg_pp1_iter0, icmp_ln85_reg_845, and_ln86_1_fu_687_p2, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = and_ln86_1_fu_687_p2) and (icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_738_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dataset_array_z_we0 <= ap_const_logic_1;
        else 
            dataset_array_z_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_array_z_we1_assign_proc : process(ap_enable_reg_pp1_iter0, icmp_ln85_reg_845, and_ln86_1_fu_687_p2, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if (((ap_const_lv1_1 = and_ln86_1_fu_687_p2) and (icmp_ln85_reg_845 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001))) then 
            dataset_array_z_we1 <= ap_const_logic_1;
        else 
            dataset_array_z_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_env_10_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, dataset_env_10_addr_1_reg_897_pp2_iter3_reg, ap_enable_reg_pp2_iter4, ap_phi_mux_i_phi_fu_311_p4, ap_block_pp0_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            dataset_env_10_address0 <= dataset_env_10_addr_1_reg_897_pp2_iter3_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_env_10_address0 <= ap_phi_mux_i_phi_fu_311_p4(3 - 1 downto 0);
        else 
            dataset_env_10_address0 <= "XXX";
        end if; 
    end process;

    dataset_env_10_address1 <= i_7_cast_fu_699_p1(3 - 1 downto 0);

    dataset_env_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if ((((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_env_10_ce0 <= ap_const_logic_1;
        else 
            dataset_env_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_env_10_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            dataset_env_10_ce1 <= ap_const_logic_1;
        else 
            dataset_env_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dataset_env_10_d0 <= grp_fu_397_p2;

    dataset_env_10_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln97_reg_893_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln97_reg_893_pp2_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            dataset_env_10_we0 <= ap_const_logic_1;
        else 
            dataset_env_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataset_n_points_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, dataset_n_points_addr_reg_752, ap_CS_fsm_state9, ap_phi_mux_i_phi_fu_311_p4, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln77_fu_538_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dataset_n_points_address0 <= zext_ln77_fu_538_p1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_n_points_address0 <= dataset_n_points_addr_reg_752;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_n_points_address0 <= ap_phi_mux_i_phi_fu_311_p4(3 - 1 downto 0);
        else 
            dataset_n_points_address0 <= "XXX";
        end if; 
    end process;


    dataset_n_points_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dataset_n_points_ce0 <= ap_const_logic_1;
        else 
            dataset_n_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dataset_n_points_d0 <= std_logic_vector(unsigned(dataset_n_points_q0) + unsigned(ap_const_lv32_2));

    dataset_n_points_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln60_reg_738)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln60_reg_738 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dataset_n_points_we0 <= ap_const_logic_1;
        else 
            dataset_n_points_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_397_p0_assign_proc : process(dataset_env_10_q1, reg_417, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp0_stage0, bitcast_ln65_1_fu_476_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_397_p0 <= dataset_env_10_q1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_397_p0 <= reg_417;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_397_p0 <= bitcast_ln65_1_fu_476_p1;
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp2_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            grp_fu_397_p1 <= ap_const_lv64_3F1A36E2EB1C432D;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_397_p1 <= ap_const_lv64_BF1A36E2EB1C432D;
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_406_ce <= ap_const_logic_1;
    grp_fu_406_opcode <= ap_const_lv5_2;
    grp_fu_406_p0 <= dataset_array_z_q1;
    grp_fu_406_p1 <= dataset_array_z_q0;
    grp_fu_406_p2 <= grp_fu_50533_p_dout0;
    grp_fu_412_p0 <= std_logic_vector(unsigned(shl_ln64_fu_455_p2) + unsigned(i_5_reg_715));
    grp_fu_50533_p_ce <= ap_const_logic_1;
    grp_fu_50533_p_din0 <= dataset_array_z_q1;
    grp_fu_50533_p_din1 <= dataset_array_z_q0;
    grp_fu_50533_p_opcode <= ap_const_lv5_2;
    i_5_fu_423_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_311_p4) + unsigned(ap_const_lv64_1));
    i_7_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_7_reg_386),64));
    i_8_fu_693_p2 <= std_logic_vector(unsigned(i_7_reg_386) + unsigned(ap_const_lv3_1));
    i_9_fu_520_p2 <= std_logic_vector(unsigned(i_6_reg_332) + unsigned(ap_const_lv3_1));
    icmp_ln60_fu_439_p2 <= "1" when (ap_phi_mux_i_phi_fu_311_p4 = p_read) else "0";
    icmp_ln77_fu_532_p2 <= "1" when (i_6_reg_332 = ap_const_lv3_5) else "0";
    icmp_ln84_fu_553_p2 <= "1" when (j_reg_364 = conv35_reg_798) else "0";
    icmp_ln85_fu_588_p2 <= "1" when (ap_phi_mux_k_phi_fu_379_p4 = add_ln84_reg_813) else "0";
    icmp_ln86_1_fu_651_p2 <= "1" when (trunc_ln86_fu_624_p1 = ap_const_lv52_0) else "0";
    icmp_ln86_2_fu_663_p2 <= "0" when (tmp_3_fu_631_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln86_3_fu_669_p2 <= "1" when (trunc_ln86_1_fu_641_p1 = ap_const_lv52_0) else "0";
    icmp_ln86_fu_645_p2 <= "0" when (tmp_fu_614_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln97_fu_704_p2 <= "1" when (i_7_cast_fu_699_p1 = p_read) else "0";
    j_2_fu_547_p2 <= std_logic_vector(unsigned(j_reg_364) + unsigned(ap_const_lv64_1));
    k_2_fu_564_p2 <= std_logic_vector(unsigned(ap_phi_mux_k_phi_fu_379_p4) + unsigned(ap_const_lv64_1));
    or_ln86_1_fu_675_p2 <= (icmp_ln86_3_fu_669_p2 or icmp_ln86_2_fu_663_p2);
    or_ln86_fu_657_p2 <= (icmp_ln86_fu_645_p2 or icmp_ln86_1_fu_651_p2);
    shl_ln64_fu_455_p2 <= std_logic_vector(shift_left(unsigned(i_5_reg_715),to_integer(unsigned('0' & ap_const_lv64_2(31-1 downto 0)))));
    tmp_3_fu_631_p4 <= bitcast_ln86_1_fu_628_p1(62 downto 52);
    tmp_fu_614_p4 <= bitcast_ln86_fu_611_p1(62 downto 52);
    trunc_ln63_1_fu_481_p1 <= dataset_n_points_q0(13 - 1 downto 0);
    trunc_ln63_fu_429_p1 <= ap_phi_mux_phi_mul_phi_fu_324_p4(13 - 1 downto 0);
    trunc_ln64_fu_444_p1 <= ap_phi_mux_i_phi_fu_311_p4(32 - 1 downto 0);
    trunc_ln85_fu_593_p1 <= k_2_fu_564_p2(13 - 1 downto 0);
    trunc_ln86_1_fu_641_p1 <= bitcast_ln86_1_fu_628_p1(52 - 1 downto 0);
    trunc_ln86_fu_624_p1 <= bitcast_ln86_fu_611_p1(52 - 1 downto 0);
    trunc_ln87_fu_570_p1 <= ap_phi_mux_k_phi_fu_379_p4(13 - 1 downto 0);
    xor_ln65_fu_470_p2 <= (bitcast_ln65_fu_466_p1 xor ap_const_lv64_8000000000000000);
    zext_ln63_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_fu_485_p2),64));
    zext_ln67_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln67_1_fu_502_p2),64));
    zext_ln77_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_332),64));
    zext_ln87_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln87_fu_574_p2),64));
    zext_ln88_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln88_fu_597_p2),64));
end behav;
