-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_top_alignedtoline_per_layer_loop3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce0 : OUT STD_LOGIC;
    points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    points_ce1 : OUT STD_LOGIC;
    points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce0 : OUT STD_LOGIC;
    num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    num_points_ce1 : OUT STD_LOGIC;
    num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    init_patch_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    init_patch_ce0 : OUT STD_LOGIC;
    init_patch_we0 : OUT STD_LOGIC;
    init_patch_d0 : OUT STD_LOGIC_VECTOR (95 downto 0);
    init_patch_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    init_patch_ce1 : OUT STD_LOGIC;
    init_patch_we1 : OUT STD_LOGIC;
    init_patch_d1 : OUT STD_LOGIC_VECTOR (95 downto 0);
    i_offset : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of system_top_alignedtoline_per_layer_loop3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_BEE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "1011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv25_1B00000 : STD_LOGIC_VECTOR (24 downto 0) := "1101100000000000000000000";
    constant ap_const_lv70_1BFFF9800000 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000110111111111111111001100000000000000000000000";
    constant ap_const_lv141_lc_2 : STD_LOGIC_VECTOR (140 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000011001100110011001100110011001100110011001100110011001100110011001100111";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv46_160006800000 : STD_LOGIC_VECTOR (45 downto 0) := "0101100000000000000110100000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv57_0 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv33_1FFFFFFF1 : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111110001";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv9_1F1 : STD_LOGIC_VECTOR (8 downto 0) := "111110001";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv9_1F2 : STD_LOGIC_VECTOR (8 downto 0) := "111110010";
    constant ap_const_lv12_FF3 : STD_LOGIC_VECTOR (11 downto 0) := "111111110011";
    constant ap_const_lv9_1F3 : STD_LOGIC_VECTOR (8 downto 0) := "111110011";
    constant ap_const_lv12_FF4 : STD_LOGIC_VECTOR (11 downto 0) := "111111110100";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv12_FF5 : STD_LOGIC_VECTOR (11 downto 0) := "111111110101";
    constant ap_const_lv9_1F5 : STD_LOGIC_VECTOR (8 downto 0) := "111110101";
    constant ap_const_lv12_FF6 : STD_LOGIC_VECTOR (11 downto 0) := "111111110110";
    constant ap_const_lv9_1F6 : STD_LOGIC_VECTOR (8 downto 0) := "111110110";
    constant ap_const_lv12_FF7 : STD_LOGIC_VECTOR (11 downto 0) := "111111110111";
    constant ap_const_lv9_1F7 : STD_LOGIC_VECTOR (8 downto 0) := "111110111";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv9_1F8 : STD_LOGIC_VECTOR (8 downto 0) := "111111000";
    constant ap_const_lv12_FF9 : STD_LOGIC_VECTOR (11 downto 0) := "111111111001";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv12_FFB : STD_LOGIC_VECTOR (11 downto 0) := "111111111011";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1FB : STD_LOGIC_VECTOR (8 downto 0) := "111111011";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal get_radiiradii_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal get_radiiradii_ce0 : STD_LOGIC;
    signal get_radiiradii_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lbVal_constprop : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal rbVal_constprop : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal zext_ln84_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln84_reg_2191 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1148_fu_627_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln1148_reg_2201 : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal projectionToRow_V_reg_2206 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal init_patch_addr_reg_2217 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal init_patch_addr_1_reg_2222 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_2_reg_2227 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_3_reg_2232 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_4_reg_2237 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_5_reg_2242 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_6_reg_2247 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_7_reg_2252 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_8_reg_2257 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_9_reg_2262 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_10_reg_2267 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_11_reg_2272 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_12_reg_2277 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_13_reg_2282 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_14_reg_2287 : STD_LOGIC_VECTOR (6 downto 0);
    signal init_patch_addr_15_reg_2292 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln708_fu_906_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln708_reg_2297 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln874_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_reg_2305 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_2309 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_933_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_5_fu_947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_5_reg_2318 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_fu_973_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_reg_2329 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_fu_1087_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln908_reg_2334 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_fu_1095_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_2339 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln1506_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_reg_2349 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_1_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1506_1_reg_2354 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1506_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ret_16_fu_1324_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_16_reg_2368 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln878_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_2386 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1461_fu_1347_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1461_reg_2390 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_1357_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_reg_2408 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal lshr_ln198_8_reg_2466 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_9_reg_2471 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_s_reg_2476 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_10_reg_2481 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_11_reg_2486 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_12_reg_2491 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_13_reg_2496 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln198_14_reg_2501 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_we0 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_we1 : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o_ap_vld : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_idle : STD_LOGIC;
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_continue : STD_LOGIC;
    signal start_index_V_1_fu_1299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_lhs_1_phi_fu_539_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_1_reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready : STD_LOGIC;
    signal ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done : STD_LOGIC := '0';
    signal left_bound_V_fu_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_V_fu_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_value_V_fu_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln206_fu_676_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_687_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_702_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_717_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_732_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_747_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_762_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_777_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_792_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_807_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_822_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_837_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_852_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_867_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_882_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_897_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_1290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_fu_1402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_1_fu_1451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_2_fu_1507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_3_fu_1553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_4_fu_1609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_5_fu_1655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_6_fu_1711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_7_fu_1757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_8_fu_2002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_9_fu_2019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_10_fu_2046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_11_fu_2063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_12_fu_2090_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_13_fu_2107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_14_fu_2134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_15_fu_2145_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_value_V_1_fu_1310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_superpoint_V_fu_1456_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_1_fu_1461_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_2_fu_1558_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_3_fu_1563_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_4_fu_1660_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_5_fu_1665_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_6_fu_1980_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_7_fu_1985_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_8_fu_2024_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_9_fu_2029_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_10_fu_2068_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_11_fu_2073_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_12_fu_2112_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_13_fu_2117_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal temp_superpoint_V_14_fu_2150_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal temp_superpoint_V_15_fu_2155_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_568_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln731_fu_605_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_V_fu_609_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_fu_617_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln1148_fu_627_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln1148_fu_627_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1148_1_fu_636_p0 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln1148_1_fu_636_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal mul_ln1148_1_fu_636_p2 : STD_LOGIC_VECTOR (140 downto 0);
    signal trunc_ln_fu_642_p4 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_1_fu_652_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_fu_669_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_fu_681_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_1_fu_696_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_2_fu_711_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_3_fu_726_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_4_fu_741_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_5_fu_756_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_6_fu_771_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_7_fu_786_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_8_fu_801_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_9_fu_816_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_10_fu_831_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_11_fu_846_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_12_fu_861_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_13_fu_876_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln206_14_fu_891_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln167_fu_909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_941_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_955_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_985_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_fu_1001_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_fu_1005_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln897_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln899_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_1_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln899_fu_1033_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1045_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln896_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln896_fu_1079_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_1_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln909_fu_1102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln909_1_fu_1099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln909_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln908_fu_1117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln908_fu_1126_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln909_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_1132_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_fu_1139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_2_fu_1142_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_6_fu_1148_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_1162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_fu_1178_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln893_fu_1170_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_1183_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln912_fu_1158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1189_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_7_fu_1196_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_1213_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln1506_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln174_fu_1252_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln174_1_fu_1255_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1245_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln174_fu_1263_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_1269_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln174_1_fu_1279_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1282_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal z_bits_fu_1295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_1320_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_1328_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln878_fu_1337_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1461_fu_1351_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_1_fu_1364_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_fu_1372_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1_fu_1378_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_16_fu_1388_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_fu_1394_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_2_fu_1407_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_2_fu_1413_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_1_fu_1421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_1_fu_1427_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_17_fu_1437_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_1443_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_3_fu_1466_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_3_fu_1471_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_2_fu_1479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_2_fu_1484_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_18_fu_1494_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_fu_1499_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_4_fu_1512_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_4_fu_1517_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_3_fu_1525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_3_fu_1530_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_19_fu_1540_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_1545_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_5_fu_1568_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_5_fu_1573_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_4_fu_1581_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_4_fu_1586_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_20_fu_1596_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_1601_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_6_fu_1614_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_6_fu_1619_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_5_fu_1627_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_5_fu_1632_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_21_fu_1642_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_fu_1647_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_7_fu_1670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_7_fu_1675_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_6_fu_1683_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_6_fu_1688_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_22_fu_1698_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_1703_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_8_fu_1716_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_8_fu_1721_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_7_fu_1729_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln198_7_fu_1734_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln198_23_fu_1744_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_1749_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_9_fu_1762_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_9_fu_1767_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_8_fu_1775_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_10_fu_1790_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_s_fu_1795_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_9_fu_1803_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_11_fu_1818_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_10_fu_1823_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_10_fu_1831_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_12_fu_1846_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_11_fu_1851_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_11_fu_1859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_13_fu_1874_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_12_fu_1879_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_12_fu_1887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_14_fu_1902_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_13_fu_1907_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_13_fu_1915_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_15_fu_1930_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln198_14_fu_1935_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_14_fu_1943_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln198_15_fu_1958_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_15_fu_1965_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_24_fu_1990_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_fu_1995_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_25_fu_2007_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_fu_2012_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_26_fu_2034_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_2039_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_27_fu_2051_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_2056_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_28_fu_2078_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_fu_2083_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_29_fu_2095_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_fu_2100_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln198_30_fu_2122_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_35_fu_2127_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_fu_2139_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1148_1_fu_636_p00 : STD_LOGIC_VECTOR (140 downto 0);
    signal mul_ln1148_fu_627_p00 : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component system_top_p_find_boundaries_and_starting_index_and_value4 IS
    port (
        num_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce0 : OUT STD_LOGIC;
        num_points_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we0 : OUT STD_LOGIC;
        num_points_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        num_points_ce1 : OUT STD_LOGIC;
        num_points_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_points_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        num_points_we1 : OUT STD_LOGIC;
        points_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce0 : OUT STD_LOGIC;
        points_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we0 : OUT STD_LOGIC;
        points_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        points_ce1 : OUT STD_LOGIC;
        points_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        points_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        points_we1 : OUT STD_LOGIC;
        left_bound : OUT STD_LOGIC_VECTOR (31 downto 0);
        projectionToRow : IN STD_LOGIC_VECTOR (25 downto 0);
        start_index : OUT STD_LOGIC_VECTOR (31 downto 0);
        start_value_i : IN STD_LOGIC_VECTOR (31 downto 0);
        start_value_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        lbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        lbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rbVal_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        projectionToRow_ap_vld : IN STD_LOGIC;
        i_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        left_bound_ap_vld : OUT STD_LOGIC;
        lbVal_constprop_i_ap_vld : IN STD_LOGIC;
        lbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        rbVal_constprop_i_ap_vld : IN STD_LOGIC;
        rbVal_constprop_o_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        start_index_ap_vld : OUT STD_LOGIC;
        start_value_i_ap_vld : IN STD_LOGIC;
        start_value_o_ap_vld : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component system_top_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component system_top_mul_25ns_46ns_70_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (45 downto 0);
        dout : OUT STD_LOGIC_VECTOR (69 downto 0) );
    end component;


    component system_top_mul_70ns_72ns_141_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (69 downto 0);
        din1 : IN STD_LOGIC_VECTOR (71 downto 0);
        dout : OUT STD_LOGIC_VECTOR (140 downto 0) );
    end component;


    component system_top_alignedtoline_per_layer_loop3_get_radiiradii IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    get_radiiradii_U : component system_top_alignedtoline_per_layer_loop3_get_radiiradii
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => get_radiiradii_address0,
        ce0 => get_radiiradii_ce0,
        q0 => get_radiiradii_q0);

    grp_p_find_boundaries_and_starting_index_and_value4_fu_549 : component system_top_p_find_boundaries_and_starting_index_and_value4
    port map (
        num_points_address0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address0,
        num_points_ce0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce0,
        num_points_d0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_d0,
        num_points_q0 => num_points_q0,
        num_points_we0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_we0,
        num_points_address1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address1,
        num_points_ce1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce1,
        num_points_d1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_d1,
        num_points_q1 => num_points_q1,
        num_points_we1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_we1,
        points_address0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address0,
        points_ce0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce0,
        points_d0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_d0,
        points_q0 => points_q0,
        points_we0 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_we0,
        points_address1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address1,
        points_ce1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce1,
        points_d1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_d1,
        points_q1 => points_q1,
        points_we1 => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_we1,
        left_bound => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound,
        projectionToRow => projectionToRow_V_reg_2206,
        start_index => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index,
        start_value_i => start_value_V_fu_230,
        start_value_o => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o,
        i => i_offset,
        lbVal_constprop_i => lbVal_constprop,
        lbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o,
        rbVal_constprop_i => rbVal_constprop,
        rbVal_constprop_o => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        projectionToRow_ap_vld => ap_const_logic_1,
        i_ap_vld => ap_const_logic_1,
        ap_start => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start,
        left_bound_ap_vld => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound_ap_vld,
        lbVal_constprop_i_ap_vld => ap_const_logic_1,
        lbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o_ap_vld,
        rbVal_constprop_i_ap_vld => ap_const_logic_1,
        rbVal_constprop_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o_ap_vld,
        ap_done => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done,
        start_index_ap_vld => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index_ap_vld,
        start_value_i_ap_vld => ap_const_logic_1,
        start_value_o_ap_vld => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o_ap_vld,
        ap_ready => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready,
        ap_idle => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_idle,
        ap_continue => grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_continue);

    dcmp_64ns_64ns_1_2_no_dsp_1_U42 : component system_top_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_568_p0,
        din1 => ap_const_lv64_BEE4F8B588E368F1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_568_p2);

    mul_25ns_46ns_70_1_1_U43 : component system_top_mul_25ns_46ns_70_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 46,
        dout_WIDTH => 70)
    port map (
        din0 => mul_ln1148_fu_627_p0,
        din1 => mul_ln1148_fu_627_p1,
        dout => mul_ln1148_fu_627_p2);

    mul_70ns_72ns_141_1_1_U44 : component system_top_mul_70ns_72ns_141_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 70,
        din1_WIDTH => 72,
        dout_WIDTH => 141)
    port map (
        din0 => mul_ln1148_1_fu_636_p0,
        din1 => mul_ln1148_1_fu_636_p1,
        dout => mul_ln1148_1_fu_636_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready <= ap_const_logic_0;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready = ap_const_logic_1)) then 
                    grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    lbVal_constprop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                lbVal_constprop <= ap_const_lv32_40000000;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                lbVal_constprop <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_lbVal_constprop_o;
            end if; 
        end if;
    end process;

    left_bound_V_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                left_bound_V_fu_234 <= ap_const_lv32_0;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                left_bound_V_fu_234 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_left_bound;
            end if; 
        end if;
    end process;

    lhs_1_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = and_ln1506_fu_1239_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln885_fu_927_p2 = ap_const_lv1_1) and (icmp_ln874_fu_918_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln874_fu_918_p2 = ap_const_lv1_1)))) then 
                lhs_1_reg_536 <= start_index_V_fu_226;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln1506_reg_2359) and (icmp_ln885_reg_2309 = ap_const_lv1_0) and (icmp_ln874_reg_2305 = ap_const_lv1_0))) then 
                lhs_1_reg_536 <= start_index_V_1_fu_1299_p2;
            end if; 
        end if;
    end process;

    rbVal_constprop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rbVal_constprop <= ap_const_lv32_40000000;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                rbVal_constprop <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_rbVal_constprop_o;
            end if; 
        end if;
    end process;

    start_index_V_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_index_V_fu_226 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln1506_reg_2359) and (icmp_ln885_reg_2309 = ap_const_lv1_0) and (icmp_ln874_reg_2305 = ap_const_lv1_0))) then 
                start_index_V_fu_226 <= start_index_V_1_fu_1299_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                start_index_V_fu_226 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_index;
            end if; 
        end if;
    end process;

    start_value_V_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_value_V_fu_230 <= ap_const_lv32_40000000;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln1506_reg_2359) and (icmp_ln885_reg_2309 = ap_const_lv1_0) and (icmp_ln874_reg_2305 = ap_const_lv1_0))) then 
                start_value_V_fu_230 <= start_value_V_1_fu_1310_p2;
            elsif (((grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                start_value_V_fu_230 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_start_value_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                and_ln1506_reg_2359 <= and_ln1506_fu_1239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln1506_1_reg_2354 <= icmp_ln1506_1_fu_1229_p2;
                icmp_ln1506_reg_2349 <= icmp_ln1506_fu_1223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln874_reg_2305 <= icmp_ln874_fu_918_p2;
                    init_patch_addr_10_reg_2267(6 downto 4) <= tmp_11_fu_822_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_11_reg_2272(6 downto 4) <= tmp_12_fu_837_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_12_reg_2277(6 downto 4) <= tmp_13_fu_852_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_13_reg_2282(6 downto 4) <= tmp_14_fu_867_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_14_reg_2287(6 downto 4) <= tmp_15_fu_882_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_15_reg_2292(6 downto 4) <= tmp_16_fu_897_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_1_reg_2222(6 downto 4) <= tmp_3_fu_687_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_2_reg_2227(6 downto 4) <= tmp_4_fu_702_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_3_reg_2232(6 downto 4) <= tmp_5_fu_717_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_4_reg_2237(6 downto 4) <= tmp_6_fu_732_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_5_reg_2242(6 downto 4) <= tmp_7_fu_747_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_6_reg_2247(6 downto 4) <= tmp_8_fu_762_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_7_reg_2252(6 downto 4) <= tmp_9_fu_777_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_8_reg_2257(6 downto 4) <= tmp_s_fu_792_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_9_reg_2262(6 downto 4) <= tmp_10_fu_807_p3(7 - 1 downto 0)(6 downto 4);
                    init_patch_addr_reg_2217(6 downto 4) <= zext_ln206_fu_676_p1(7 - 1 downto 0)(6 downto 4);
                    zext_ln708_reg_2297(25 downto 0) <= zext_ln708_fu_906_p1(25 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln878_reg_2386 <= icmp_ln878_fu_1341_p2;
                ret_16_reg_2368 <= ret_16_fu_1324_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln874_fu_918_p2 = ap_const_lv1_0))) then
                icmp_ln885_reg_2309 <= icmp_ln885_fu_927_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln885_fu_927_p2 = ap_const_lv1_0) and (icmp_ln874_fu_918_p2 = ap_const_lv1_0))) then
                icmp_ln908_reg_2329 <= icmp_ln908_fu_1067_p2;
                m_5_reg_2318 <= m_5_fu_947_p3;
                p_Result_4_reg_2313 <= start_value_V_fu_230(31 downto 31);
                select_ln908_reg_2334 <= select_ln908_fu_1087_p3;
                sub_ln894_reg_2323 <= sub_ln894_fu_973_p2;
                trunc_ln893_reg_2339 <= trunc_ln893_fu_1095_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                lshr_ln198_10_reg_2481 <= add_ln198_11_fu_1859_p2(15 downto 13);
                lshr_ln198_11_reg_2486 <= add_ln198_12_fu_1887_p2(15 downto 13);
                lshr_ln198_12_reg_2491 <= add_ln198_13_fu_1915_p2(15 downto 13);
                lshr_ln198_13_reg_2496 <= add_ln198_14_fu_1943_p2(15 downto 13);
                lshr_ln198_14_reg_2501 <= add_ln198_15_fu_1965_p2(15 downto 13);
                lshr_ln198_8_reg_2466 <= add_ln198_8_fu_1775_p2(15 downto 13);
                lshr_ln198_9_reg_2471 <= add_ln198_9_fu_1803_p2(15 downto 13);
                lshr_ln198_s_reg_2476 <= add_ln198_10_fu_1831_p2(15 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_ln1148_reg_2201 <= mul_ln1148_fu_627_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                projectionToRow_V_reg_2206 <= ret_V_1_fu_652_p2(45 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln878_fu_1341_p2 = ap_const_lv1_0))) then
                    shl_ln1_reg_2408(15 downto 13) <= shl_ln1_fu_1357_p3(15 downto 13);
                trunc_ln1461_reg_2390 <= trunc_ln1461_fu_1347_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    zext_ln84_reg_2191(2 downto 0) <= zext_ln84_fu_573_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln84_reg_2191(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    init_patch_addr_reg_2217(3 downto 0) <= "0000";
    init_patch_addr_1_reg_2222(3 downto 0) <= "0001";
    init_patch_addr_2_reg_2227(3 downto 0) <= "0010";
    init_patch_addr_3_reg_2232(3 downto 0) <= "0011";
    init_patch_addr_4_reg_2237(3 downto 0) <= "0100";
    init_patch_addr_5_reg_2242(3 downto 0) <= "0101";
    init_patch_addr_6_reg_2247(3 downto 0) <= "0110";
    init_patch_addr_7_reg_2252(3 downto 0) <= "0111";
    init_patch_addr_8_reg_2257(3 downto 0) <= "1000";
    init_patch_addr_9_reg_2262(3 downto 0) <= "1001";
    init_patch_addr_10_reg_2267(3 downto 0) <= "1010";
    init_patch_addr_11_reg_2272(3 downto 0) <= "1011";
    init_patch_addr_12_reg_2277(3 downto 0) <= "1100";
    init_patch_addr_13_reg_2282(3 downto 0) <= "1101";
    init_patch_addr_14_reg_2287(3 downto 0) <= "1110";
    init_patch_addr_15_reg_2292(3 downto 0) <= "1111";
    zext_ln708_reg_2297(31 downto 26) <= "000000";
    shl_ln1_reg_2408(12 downto 0) <= "0000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, icmp_ln874_fu_918_p2, icmp_ln885_fu_927_p2, ap_CS_fsm_state9, icmp_ln878_fu_1341_p2, ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln885_fu_927_p2 = ap_const_lv1_0) and (icmp_ln874_fu_918_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln878_fu_1341_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1461_fu_1351_p2 <= std_logic_vector(unsigned(ret_16_fu_1324_p1) + unsigned(ap_const_lv12_FF1));
    add_ln167_fu_909_p2 <= std_logic_vector(unsigned(num_points_q0) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln174_fu_1263_p2 <= std_logic_vector(unsigned(shl_ln174_1_fu_1255_p3) + unsigned(shl_ln_fu_1245_p3));
    add_ln198_10_fu_1831_p2 <= std_logic_vector(unsigned(shl_ln198_10_fu_1823_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_11_fu_1859_p2 <= std_logic_vector(unsigned(shl_ln198_11_fu_1851_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_12_fu_1887_p2 <= std_logic_vector(unsigned(shl_ln198_12_fu_1879_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_13_fu_1915_p2 <= std_logic_vector(unsigned(shl_ln198_13_fu_1907_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_14_fu_1943_p2 <= std_logic_vector(unsigned(shl_ln198_14_fu_1935_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_15_fu_1965_p2 <= std_logic_vector(unsigned(shl_ln198_15_fu_1958_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_16_fu_1388_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1347_p1) + unsigned(ap_const_lv9_1F1));
    add_ln198_17_fu_1437_p2 <= std_logic_vector(unsigned(trunc_ln1461_fu_1347_p1) + unsigned(ap_const_lv9_1F2));
    add_ln198_18_fu_1494_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F3));
    add_ln198_19_fu_1540_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F4));
    add_ln198_1_fu_1421_p2 <= std_logic_vector(unsigned(shl_ln198_2_fu_1413_p3) + unsigned(shl_ln1_fu_1357_p3));
    add_ln198_20_fu_1596_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F5));
    add_ln198_21_fu_1642_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F6));
    add_ln198_22_fu_1698_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F7));
    add_ln198_23_fu_1744_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F8));
    add_ln198_24_fu_1990_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1F9));
    add_ln198_25_fu_2007_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FA));
    add_ln198_26_fu_2034_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FB));
    add_ln198_27_fu_2051_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FC));
    add_ln198_28_fu_2078_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FD));
    add_ln198_29_fu_2095_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FE));
    add_ln198_2_fu_1479_p2 <= std_logic_vector(unsigned(shl_ln198_3_fu_1471_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_30_fu_2122_p2 <= std_logic_vector(unsigned(trunc_ln1461_reg_2390) + unsigned(ap_const_lv9_1FF));
    add_ln198_3_fu_1525_p2 <= std_logic_vector(unsigned(shl_ln198_4_fu_1517_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_4_fu_1581_p2 <= std_logic_vector(unsigned(shl_ln198_5_fu_1573_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_5_fu_1627_p2 <= std_logic_vector(unsigned(shl_ln198_6_fu_1619_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_6_fu_1683_p2 <= std_logic_vector(unsigned(shl_ln198_7_fu_1675_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_7_fu_1729_p2 <= std_logic_vector(unsigned(shl_ln198_8_fu_1721_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_8_fu_1775_p2 <= std_logic_vector(unsigned(shl_ln198_9_fu_1767_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_9_fu_1803_p2 <= std_logic_vector(unsigned(shl_ln198_s_fu_1795_p3) + unsigned(shl_ln1_reg_2408));
    add_ln198_fu_1372_p2 <= std_logic_vector(unsigned(shl_ln198_1_fu_1364_p3) + unsigned(shl_ln1_fu_1357_p3));
    add_ln908_fu_1117_p2 <= std_logic_vector(unsigned(sub_ln894_reg_2323) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln915_fu_1183_p2 <= std_logic_vector(unsigned(sub_ln915_fu_1178_p2) + unsigned(select_ln893_fu_1170_p3));
    and_ln1506_fu_1239_p2 <= (or_ln1506_fu_1235_p2 and grp_fu_568_p2);
    and_ln899_1_fu_1073_p2 <= (xor_ln899_fu_1053_p2 and p_Result_6_fu_1059_p3);
    and_ln899_fu_1033_p2 <= (or_ln899_1_fu_1027_p2 and m_5_fu_947_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state4_on_subcall_done_assign_proc : process(ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready, ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready and ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_lhs_1_phi_fu_539_p8_assign_proc : process(icmp_ln874_reg_2305, icmp_ln885_reg_2309, and_ln1506_reg_2359, ap_CS_fsm_state9, start_index_V_1_fu_1299_p2, lhs_1_reg_536)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln1506_reg_2359) and (icmp_ln885_reg_2309 = ap_const_lv1_0) and (icmp_ln874_reg_2305 = ap_const_lv1_0))) then 
            ap_phi_mux_lhs_1_phi_fu_539_p8 <= start_index_V_1_fu_1299_p2;
        else 
            ap_phi_mux_lhs_1_phi_fu_539_p8 <= lhs_1_reg_536;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done <= (grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_done);
    ap_sync_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready <= (grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready or ap_sync_reg_grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_ready);
    get_radiiradii_address0 <= zext_ln84_fu_573_p1(3 - 1 downto 0);

    get_radiiradii_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            get_radiiradii_ce0 <= ap_const_logic_1;
        else 
            get_radiiradii_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_568_p0 <= p_Result_7_fu_1196_p5;

    grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_continue_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_continue <= ap_const_logic_1;
        else 
            grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_ap_start_reg;
    icmp_ln1506_1_fu_1229_p2 <= "1" when (trunc_ln3_fu_1213_p4 = ap_const_lv52_0) else "0";
    icmp_ln1506_fu_1223_p2 <= "0" when (add_ln915_fu_1183_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln874_fu_918_p2 <= "1" when (start_index_V_fu_226 = add_ln167_fu_909_p2) else "0";
    icmp_ln878_fu_1341_p2 <= "1" when (signed(ret_fu_1328_p2) < signed(sext_ln878_fu_1337_p1)) else "0";
    icmp_ln885_fu_927_p2 <= "1" when (start_value_V_fu_230 = ap_const_lv32_0) else "0";
    icmp_ln896_fu_995_p2 <= "1" when (signed(tmp_19_fu_985_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln899_fu_1039_p2 <= "0" when (and_ln899_fu_1033_p2 = ap_const_lv32_0) else "1";
    icmp_ln908_fu_1067_p2 <= "1" when (signed(lsb_index_fu_979_p2) > signed(ap_const_lv32_0)) else "0";

    init_patch_address0_assign_proc : process(init_patch_addr_1_reg_2222, init_patch_addr_3_reg_2232, init_patch_addr_5_reg_2242, init_patch_addr_7_reg_2252, init_patch_addr_9_reg_2262, init_patch_addr_11_reg_2272, init_patch_addr_13_reg_2282, init_patch_addr_15_reg_2292, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_address0 <= init_patch_addr_15_reg_2292;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            init_patch_address0 <= init_patch_addr_13_reg_2282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            init_patch_address0 <= init_patch_addr_11_reg_2272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            init_patch_address0 <= init_patch_addr_9_reg_2262;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            init_patch_address0 <= init_patch_addr_7_reg_2252;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            init_patch_address0 <= init_patch_addr_5_reg_2242;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            init_patch_address0 <= init_patch_addr_3_reg_2232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_address0 <= init_patch_addr_1_reg_2222;
        else 
            init_patch_address0 <= "XXXXXXX";
        end if; 
    end process;


    init_patch_address1_assign_proc : process(init_patch_addr_reg_2217, init_patch_addr_2_reg_2227, init_patch_addr_4_reg_2237, init_patch_addr_6_reg_2247, init_patch_addr_8_reg_2257, init_patch_addr_10_reg_2267, init_patch_addr_12_reg_2277, init_patch_addr_14_reg_2287, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_address1 <= init_patch_addr_14_reg_2287;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            init_patch_address1 <= init_patch_addr_12_reg_2277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            init_patch_address1 <= init_patch_addr_10_reg_2267;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            init_patch_address1 <= init_patch_addr_8_reg_2257;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            init_patch_address1 <= init_patch_addr_6_reg_2247;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            init_patch_address1 <= init_patch_addr_4_reg_2237;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            init_patch_address1 <= init_patch_addr_2_reg_2227;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_address1 <= init_patch_addr_reg_2217;
        else 
            init_patch_address1 <= "XXXXXXX";
        end if; 
    end process;


    init_patch_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            init_patch_ce0 <= ap_const_logic_1;
        else 
            init_patch_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            init_patch_ce1 <= ap_const_logic_1;
        else 
            init_patch_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_d0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, temp_superpoint_V_1_fu_1461_p1, temp_superpoint_V_3_fu_1563_p1, temp_superpoint_V_5_fu_1665_p1, temp_superpoint_V_7_fu_1985_p1, temp_superpoint_V_9_fu_2029_p1, temp_superpoint_V_11_fu_2073_p1, temp_superpoint_V_13_fu_2117_p1, ap_CS_fsm_state17, temp_superpoint_V_15_fu_2155_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_d0 <= temp_superpoint_V_15_fu_2155_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            init_patch_d0 <= temp_superpoint_V_13_fu_2117_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            init_patch_d0 <= temp_superpoint_V_11_fu_2073_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            init_patch_d0 <= temp_superpoint_V_9_fu_2029_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            init_patch_d0 <= temp_superpoint_V_7_fu_1985_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            init_patch_d0 <= temp_superpoint_V_5_fu_1665_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            init_patch_d0 <= temp_superpoint_V_3_fu_1563_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_d0 <= temp_superpoint_V_1_fu_1461_p1;
        else 
            init_patch_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_d1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, temp_superpoint_V_fu_1456_p1, temp_superpoint_V_2_fu_1558_p1, temp_superpoint_V_4_fu_1660_p1, temp_superpoint_V_6_fu_1980_p1, temp_superpoint_V_8_fu_2024_p1, temp_superpoint_V_10_fu_2068_p1, temp_superpoint_V_12_fu_2112_p1, ap_CS_fsm_state17, temp_superpoint_V_14_fu_2150_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            init_patch_d1 <= temp_superpoint_V_14_fu_2150_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            init_patch_d1 <= temp_superpoint_V_12_fu_2112_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            init_patch_d1 <= temp_superpoint_V_10_fu_2068_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            init_patch_d1 <= temp_superpoint_V_8_fu_2024_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            init_patch_d1 <= temp_superpoint_V_6_fu_1980_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            init_patch_d1 <= temp_superpoint_V_4_fu_1660_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            init_patch_d1 <= temp_superpoint_V_2_fu_1558_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_d1 <= temp_superpoint_V_fu_1456_p1;
        else 
            init_patch_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_we0_assign_proc : process(icmp_ln878_reg_2386, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln878_reg_2386 = ap_const_lv1_0)))) then 
            init_patch_we0 <= ap_const_logic_1;
        else 
            init_patch_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_we1_assign_proc : process(icmp_ln878_reg_2386, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln878_reg_2386 = ap_const_lv1_0)))) then 
            init_patch_we1 <= ap_const_logic_1;
        else 
            init_patch_we1 <= ap_const_logic_0;
        end if; 
    end process;

    
    l_fu_965_p3_proc : process(p_Result_5_fu_955_p4)
    begin
        l_fu_965_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_5_fu_955_p4(i) = '1' then
                l_fu_965_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_979_p2 <= std_logic_vector(unsigned(sub_ln894_fu_973_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln198_1_fu_1427_p4 <= add_ln198_1_fu_1421_p2(15 downto 13);
    lshr_ln198_2_fu_1484_p4 <= add_ln198_2_fu_1479_p2(15 downto 13);
    lshr_ln198_3_fu_1530_p4 <= add_ln198_3_fu_1525_p2(15 downto 13);
    lshr_ln198_4_fu_1586_p4 <= add_ln198_4_fu_1581_p2(15 downto 13);
    lshr_ln198_5_fu_1632_p4 <= add_ln198_5_fu_1627_p2(15 downto 13);
    lshr_ln198_6_fu_1688_p4 <= add_ln198_6_fu_1683_p2(15 downto 13);
    lshr_ln198_7_fu_1734_p4 <= add_ln198_7_fu_1729_p2(15 downto 13);
    lshr_ln1_fu_1378_p4 <= add_ln198_fu_1372_p2(15 downto 13);
    lshr_ln897_fu_1015_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln897_fu_1011_p1(31-1 downto 0)))));
    lshr_ln908_fu_1126_p2 <= std_logic_vector(shift_right(unsigned(zext_ln909_1_fu_1099_p1),to_integer(unsigned('0' & zext_ln908_fu_1122_p1(31-1 downto 0)))));
    lshr_ln_fu_1269_p4 <= add_ln174_fu_1263_p2(15 downto 13);
    m_2_fu_1142_p2 <= std_logic_vector(unsigned(m_fu_1132_p3) + unsigned(zext_ln911_fu_1139_p1));
    m_5_fu_947_p3 <= 
        tmp_V_fu_941_p2 when (p_Result_4_fu_933_p3(0) = '1') else 
        start_value_V_fu_230;
    m_6_fu_1148_p4 <= m_2_fu_1142_p2(63 downto 1);
    m_fu_1132_p3 <= 
        lshr_ln908_fu_1126_p2 when (icmp_ln908_reg_2329(0) = '1') else 
        shl_ln909_fu_1111_p2;
    mul_ln1148_1_fu_636_p0 <= mul_ln1148_1_fu_636_p00(70 - 1 downto 0);
    mul_ln1148_1_fu_636_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1148_reg_2201),141));
    mul_ln1148_1_fu_636_p1 <= ap_const_lv141_lc_2(72 - 1 downto 0);
    mul_ln1148_fu_627_p0 <= mul_ln1148_fu_627_p00(25 - 1 downto 0);
    mul_ln1148_fu_627_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_617_p2),70));
    mul_ln1148_fu_627_p1 <= ap_const_lv70_1BFFF9800000(46 - 1 downto 0);

    num_points_address0_assign_proc : process(zext_ln84_reg_2191, ap_CS_fsm_state5, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            num_points_address0 <= zext_ln84_reg_2191(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            num_points_address0 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address0;
        else 
            num_points_address0 <= "XXX";
        end if; 
    end process;

    num_points_address1 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_address1;

    num_points_ce0_assign_proc : process(ap_CS_fsm_state5, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            num_points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            num_points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce0;
        else 
            num_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    num_points_ce1_assign_proc : process(grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            num_points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_num_points_ce1;
        else 
            num_points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1506_fu_1235_p2 <= (icmp_ln1506_reg_2349 or icmp_ln1506_1_reg_2354);
    or_ln206_10_fu_831_p2 <= (tmp_fu_669_p3 or ap_const_lv7_B);
    or_ln206_11_fu_846_p2 <= (tmp_fu_669_p3 or ap_const_lv7_C);
    or_ln206_12_fu_861_p2 <= (tmp_fu_669_p3 or ap_const_lv7_D);
    or_ln206_13_fu_876_p2 <= (tmp_fu_669_p3 or ap_const_lv7_E);
    or_ln206_14_fu_891_p2 <= (tmp_fu_669_p3 or ap_const_lv7_F);
    or_ln206_1_fu_696_p2 <= (tmp_fu_669_p3 or ap_const_lv7_2);
    or_ln206_2_fu_711_p2 <= (tmp_fu_669_p3 or ap_const_lv7_3);
    or_ln206_3_fu_726_p2 <= (tmp_fu_669_p3 or ap_const_lv7_4);
    or_ln206_4_fu_741_p2 <= (tmp_fu_669_p3 or ap_const_lv7_5);
    or_ln206_5_fu_756_p2 <= (tmp_fu_669_p3 or ap_const_lv7_6);
    or_ln206_6_fu_771_p2 <= (tmp_fu_669_p3 or ap_const_lv7_7);
    or_ln206_7_fu_786_p2 <= (tmp_fu_669_p3 or ap_const_lv7_8);
    or_ln206_8_fu_801_p2 <= (tmp_fu_669_p3 or ap_const_lv7_9);
    or_ln206_9_fu_816_p2 <= (tmp_fu_669_p3 or ap_const_lv7_A);
    or_ln206_fu_681_p2 <= (tmp_fu_669_p3 or ap_const_lv7_1);
    or_ln899_1_fu_1027_p2 <= (shl_ln899_fu_1021_p2 or lshr_ln897_fu_1015_p2);
    p_Result_4_fu_933_p3 <= start_value_V_fu_230(31 downto 31);
    
    p_Result_5_fu_955_p4_proc : process(m_5_fu_947_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_5_fu_955_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_5_fu_947_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_5_fu_955_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_5_fu_955_p4_i) := m_5_fu_947_p3(32-1-p_Result_5_fu_955_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_5_fu_955_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_6_fu_1059_p3 <= m_5_fu_947_p3(to_integer(unsigned(lsb_index_fu_979_p2)) downto to_integer(unsigned(lsb_index_fu_979_p2))) when (to_integer(unsigned(lsb_index_fu_979_p2))>= 0 and to_integer(unsigned(lsb_index_fu_979_p2))<=31) else "-";
    p_Result_7_fu_1196_p5 <= (tmp_1_fu_1189_p3 & zext_ln912_fu_1158_p1(51 downto 0));
    p_Result_s_fu_1162_p3 <= m_2_fu_1142_p2(54 downto 54);

    points_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address0, ap_CS_fsm_state4, zext_ln174_fu_1290_p1, zext_ln198_1_fu_1451_p1, zext_ln198_2_fu_1507_p1, zext_ln198_4_fu_1609_p1, zext_ln198_6_fu_1711_p1, zext_ln198_8_fu_2002_p1, zext_ln198_10_fu_2046_p1, zext_ln198_12_fu_2090_p1, zext_ln198_14_fu_2134_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address0 <= zext_ln198_14_fu_2134_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            points_address0 <= zext_ln198_12_fu_2090_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            points_address0 <= zext_ln198_10_fu_2046_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            points_address0 <= zext_ln198_8_fu_2002_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            points_address0 <= zext_ln198_6_fu_1711_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            points_address0 <= zext_ln198_4_fu_1609_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_address0 <= zext_ln198_2_fu_1507_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address0 <= zext_ln198_1_fu_1451_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            points_address0 <= zext_ln174_fu_1290_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            points_address0 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address0;
        else 
            points_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address1, ap_CS_fsm_state4, zext_ln198_fu_1402_p1, zext_ln198_3_fu_1553_p1, zext_ln198_5_fu_1655_p1, zext_ln198_7_fu_1757_p1, zext_ln198_9_fu_2019_p1, zext_ln198_11_fu_2063_p1, zext_ln198_13_fu_2107_p1, zext_ln198_15_fu_2145_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            points_address1 <= zext_ln198_15_fu_2145_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            points_address1 <= zext_ln198_13_fu_2107_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            points_address1 <= zext_ln198_11_fu_2063_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            points_address1 <= zext_ln198_9_fu_2019_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            points_address1 <= zext_ln198_7_fu_1757_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            points_address1 <= zext_ln198_5_fu_1655_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_address1 <= zext_ln198_3_fu_1553_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            points_address1 <= zext_ln198_fu_1402_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            points_address1 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_address1;
        else 
            points_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    points_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce0, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            points_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            points_ce0 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce0;
        else 
            points_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            points_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            points_ce1 <= grp_p_find_boundaries_and_starting_index_and_value4_fu_549_points_ce1;
        else 
            points_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ret_10_fu_1790_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFA));
    ret_11_fu_1818_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFB));
    ret_12_fu_1846_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFC));
    ret_13_fu_1874_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFD));
    ret_14_fu_1902_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFE));
    ret_15_fu_1930_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FFF));
    ret_16_fu_1324_p1 <= ap_phi_mux_lhs_1_phi_fu_539_p8(12 - 1 downto 0);
    ret_2_fu_1407_p2 <= std_logic_vector(unsigned(ret_16_fu_1324_p1) + unsigned(ap_const_lv12_FF2));
    ret_3_fu_1466_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF3));
    ret_4_fu_1512_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF4));
    ret_5_fu_1568_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF5));
    ret_6_fu_1614_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF6));
    ret_7_fu_1670_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF7));
    ret_8_fu_1716_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF8));
    ret_9_fu_1762_p2 <= std_logic_vector(unsigned(ret_16_reg_2368) + unsigned(ap_const_lv12_FF9));
    ret_V_1_fu_652_p2 <= std_logic_vector(unsigned(trunc_ln_fu_642_p4) + unsigned(ap_const_lv46_160006800000));
    ret_V_fu_617_p2 <= std_logic_vector(unsigned(y_V_fu_609_p3) + unsigned(ap_const_lv25_1B00000));
    ret_fu_1328_p2 <= std_logic_vector(signed(sext_ln215_fu_1320_p1) + signed(ap_const_lv33_1FFFFFFF1));
    select_ln893_fu_1170_p3 <= 
        ap_const_lv11_3FF when (p_Result_s_fu_1162_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln896_fu_1079_p3 <= 
        icmp_ln899_fu_1039_p2 when (icmp_ln896_fu_995_p2(0) = '1') else 
        p_Result_6_fu_1059_p3;
    select_ln908_fu_1087_p3 <= 
        select_ln896_fu_1079_p3 when (icmp_ln908_fu_1067_p2(0) = '1') else 
        and_ln899_1_fu_1073_p2;
        sext_ln215_fu_1320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_lhs_1_phi_fu_539_p8),33));

        sext_ln878_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(left_bound_V_fu_234),33));

    shl_ln174_1_fu_1255_p3 <= (trunc_ln174_fu_1252_p1 & ap_const_lv4_0);
    shl_ln198_10_fu_1823_p3 <= (ret_11_fu_1818_p2 & ap_const_lv4_0);
    shl_ln198_11_fu_1851_p3 <= (ret_12_fu_1846_p2 & ap_const_lv4_0);
    shl_ln198_12_fu_1879_p3 <= (ret_13_fu_1874_p2 & ap_const_lv4_0);
    shl_ln198_13_fu_1907_p3 <= (ret_14_fu_1902_p2 & ap_const_lv4_0);
    shl_ln198_14_fu_1935_p3 <= (ret_15_fu_1930_p2 & ap_const_lv4_0);
    shl_ln198_15_fu_1958_p3 <= (ret_16_reg_2368 & ap_const_lv4_0);
    shl_ln198_1_fu_1364_p3 <= (add_ln1461_fu_1351_p2 & ap_const_lv4_0);
    shl_ln198_2_fu_1413_p3 <= (ret_2_fu_1407_p2 & ap_const_lv4_0);
    shl_ln198_3_fu_1471_p3 <= (ret_3_fu_1466_p2 & ap_const_lv4_0);
    shl_ln198_4_fu_1517_p3 <= (ret_4_fu_1512_p2 & ap_const_lv4_0);
    shl_ln198_5_fu_1573_p3 <= (ret_5_fu_1568_p2 & ap_const_lv4_0);
    shl_ln198_6_fu_1619_p3 <= (ret_6_fu_1614_p2 & ap_const_lv4_0);
    shl_ln198_7_fu_1675_p3 <= (ret_7_fu_1670_p2 & ap_const_lv4_0);
    shl_ln198_8_fu_1721_p3 <= (ret_8_fu_1716_p2 & ap_const_lv4_0);
    shl_ln198_9_fu_1767_p3 <= (ret_9_fu_1762_p2 & ap_const_lv4_0);
    shl_ln198_s_fu_1795_p3 <= (ret_10_fu_1790_p2 & ap_const_lv4_0);
    shl_ln1_fu_1357_p3 <= (i_offset & ap_const_lv13_0);
    shl_ln899_fu_1021_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_979_p2(31-1 downto 0)))));
    shl_ln909_fu_1111_p2 <= std_logic_vector(shift_left(unsigned(zext_ln909_1_fu_1099_p1),to_integer(unsigned('0' & zext_ln909_fu_1107_p1(31-1 downto 0)))));
    shl_ln_fu_1245_p3 <= (i_offset & ap_const_lv13_0);
    start_index_V_1_fu_1299_p2 <= std_logic_vector(unsigned(start_index_V_fu_226) + unsigned(ap_const_lv32_1));
    start_value_V_1_fu_1310_p2 <= std_logic_vector(unsigned(z_bits_fu_1295_p1) - unsigned(zext_ln708_reg_2297));
    sub_ln894_fu_973_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_965_p3));
    sub_ln897_fu_1005_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln897_fu_1001_p1));
    sub_ln909_fu_1102_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_reg_2323));
    sub_ln915_fu_1178_p2 <= std_logic_vector(unsigned(ap_const_lv11_C) - unsigned(trunc_ln893_reg_2339));
    temp_superpoint_V_10_fu_2068_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_11_fu_2073_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_12_fu_2112_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_13_fu_2117_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_14_fu_2150_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_15_fu_2155_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_1_fu_1461_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_2_fu_1558_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_3_fu_1563_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_4_fu_1660_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_5_fu_1665_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_6_fu_1980_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_7_fu_1985_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_8_fu_2024_p1 <= points_q0(96 - 1 downto 0);
    temp_superpoint_V_9_fu_2029_p1 <= points_q1(96 - 1 downto 0);
    temp_superpoint_V_fu_1456_p1 <= points_q1(96 - 1 downto 0);
    tmp_10_fu_807_p3 <= (ap_const_lv57_0 & or_ln206_8_fu_801_p2);
    tmp_11_fu_822_p3 <= (ap_const_lv57_0 & or_ln206_9_fu_816_p2);
    tmp_12_fu_837_p3 <= (ap_const_lv57_0 & or_ln206_10_fu_831_p2);
    tmp_13_fu_852_p3 <= (ap_const_lv57_0 & or_ln206_11_fu_846_p2);
    tmp_14_fu_867_p3 <= (ap_const_lv57_0 & or_ln206_12_fu_861_p2);
    tmp_15_fu_882_p3 <= (ap_const_lv57_0 & or_ln206_13_fu_876_p2);
    tmp_16_fu_897_p3 <= (ap_const_lv57_0 & or_ln206_14_fu_891_p2);
    tmp_18_fu_1282_p3 <= (lshr_ln_fu_1269_p4 & trunc_ln174_1_fu_1279_p1);
    tmp_19_fu_985_p4 <= lsb_index_fu_979_p2(31 downto 1);
    tmp_1_fu_1189_p3 <= (p_Result_4_reg_2313 & add_ln915_fu_1183_p2);
    tmp_20_fu_1045_p3 <= lsb_index_fu_979_p2(31 downto 31);
    tmp_21_fu_1394_p3 <= (lshr_ln1_fu_1378_p4 & add_ln198_16_fu_1388_p2);
    tmp_22_fu_1443_p3 <= (lshr_ln198_1_fu_1427_p4 & add_ln198_17_fu_1437_p2);
    tmp_23_fu_1499_p3 <= (lshr_ln198_2_fu_1484_p4 & add_ln198_18_fu_1494_p2);
    tmp_24_fu_1545_p3 <= (lshr_ln198_3_fu_1530_p4 & add_ln198_19_fu_1540_p2);
    tmp_25_fu_1601_p3 <= (lshr_ln198_4_fu_1586_p4 & add_ln198_20_fu_1596_p2);
    tmp_26_fu_1647_p3 <= (lshr_ln198_5_fu_1632_p4 & add_ln198_21_fu_1642_p2);
    tmp_27_fu_1703_p3 <= (lshr_ln198_6_fu_1688_p4 & add_ln198_22_fu_1698_p2);
    tmp_28_fu_1749_p3 <= (lshr_ln198_7_fu_1734_p4 & add_ln198_23_fu_1744_p2);
    tmp_29_fu_1995_p3 <= (lshr_ln198_8_reg_2466 & add_ln198_24_fu_1990_p2);
    tmp_30_fu_2012_p3 <= (lshr_ln198_9_reg_2471 & add_ln198_25_fu_2007_p2);
    tmp_31_fu_2039_p3 <= (lshr_ln198_s_reg_2476 & add_ln198_26_fu_2034_p2);
    tmp_32_fu_2056_p3 <= (lshr_ln198_10_reg_2481 & add_ln198_27_fu_2051_p2);
    tmp_33_fu_2083_p3 <= (lshr_ln198_11_reg_2486 & add_ln198_28_fu_2078_p2);
    tmp_34_fu_2100_p3 <= (lshr_ln198_12_reg_2491 & add_ln198_29_fu_2095_p2);
    tmp_35_fu_2127_p3 <= (lshr_ln198_13_reg_2496 & add_ln198_30_fu_2122_p2);
    tmp_36_fu_2139_p3 <= (lshr_ln198_14_reg_2501 & trunc_ln1461_reg_2390);
    tmp_3_fu_687_p3 <= (ap_const_lv57_0 & or_ln206_fu_681_p2);
    tmp_4_fu_702_p3 <= (ap_const_lv57_0 & or_ln206_1_fu_696_p2);
    tmp_5_fu_717_p3 <= (ap_const_lv57_0 & or_ln206_2_fu_711_p2);
    tmp_6_fu_732_p3 <= (ap_const_lv57_0 & or_ln206_3_fu_726_p2);
    tmp_7_fu_747_p3 <= (ap_const_lv57_0 & or_ln206_4_fu_741_p2);
    tmp_8_fu_762_p3 <= (ap_const_lv57_0 & or_ln206_5_fu_756_p2);
    tmp_9_fu_777_p3 <= (ap_const_lv57_0 & or_ln206_6_fu_771_p2);
    tmp_V_fu_941_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(start_value_V_fu_230));
    tmp_fu_669_p3 <= (i_offset & ap_const_lv4_0);
    tmp_s_fu_792_p3 <= (ap_const_lv57_0 & or_ln206_7_fu_786_p2);
    trunc_ln1461_fu_1347_p1 <= ap_phi_mux_lhs_1_phi_fu_539_p8(9 - 1 downto 0);
    trunc_ln174_1_fu_1279_p1 <= start_index_V_fu_226(9 - 1 downto 0);
    trunc_ln174_fu_1252_p1 <= start_index_V_fu_226(12 - 1 downto 0);
    trunc_ln3_fu_1213_p4 <= m_2_fu_1142_p2(52 downto 1);
    trunc_ln731_fu_605_p1 <= get_radiiradii_q0(5 - 1 downto 0);
    trunc_ln893_fu_1095_p1 <= l_fu_965_p3(11 - 1 downto 0);
    trunc_ln897_fu_1001_p1 <= sub_ln894_fu_973_p2(6 - 1 downto 0);
    trunc_ln_fu_642_p4 <= mul_ln1148_1_fu_636_p2(140 downto 95);
    xor_ln899_fu_1053_p2 <= (tmp_20_fu_1045_p3 xor ap_const_lv1_1);
    y_V_fu_609_p3 <= (trunc_ln731_fu_605_p1 & ap_const_lv20_0);
    z_bits_fu_1295_p1 <= points_q0(32 - 1 downto 0);
    zext_ln174_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1282_p3),64));
    zext_ln198_10_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_2039_p3),64));
    zext_ln198_11_fu_2063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_2056_p3),64));
    zext_ln198_12_fu_2090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_2083_p3),64));
    zext_ln198_13_fu_2107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_2100_p3),64));
    zext_ln198_14_fu_2134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2127_p3),64));
    zext_ln198_15_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_2139_p3),64));
    zext_ln198_1_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1443_p3),64));
    zext_ln198_2_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1499_p3),64));
    zext_ln198_3_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1545_p3),64));
    zext_ln198_4_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_1601_p3),64));
    zext_ln198_5_fu_1655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_1647_p3),64));
    zext_ln198_6_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1703_p3),64));
    zext_ln198_7_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_1749_p3),64));
    zext_ln198_8_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1995_p3),64));
    zext_ln198_9_fu_2019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_2012_p3),64));
    zext_ln198_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1394_p3),64));
    zext_ln206_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_669_p3),64));
    zext_ln708_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(projectionToRow_V_reg_2206),32));
    zext_ln84_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_offset),64));
    zext_ln897_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_fu_1005_p2),32));
    zext_ln908_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_fu_1117_p2),64));
    zext_ln909_1_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_5_reg_2318),64));
    zext_ln909_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln909_fu_1102_p2),64));
    zext_ln911_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln908_reg_2334),64));
    zext_ln912_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_6_fu_1148_p4),64));
end behav;
