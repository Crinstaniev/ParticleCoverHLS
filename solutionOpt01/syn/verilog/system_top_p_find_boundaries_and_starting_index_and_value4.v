// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_p_find_boundaries_and_starting_index_and_value4 (
        num_points_address0,
        num_points_ce0,
        num_points_d0,
        num_points_q0,
        num_points_we0,
        num_points_address1,
        num_points_ce1,
        num_points_d1,
        num_points_q1,
        num_points_we1,
        points_address0,
        points_ce0,
        points_d0,
        points_q0,
        points_we0,
        points_address1,
        points_ce1,
        points_d1,
        points_q1,
        points_we1,
        left_bound,
        projectionToRow,
        start_index,
        start_value_i,
        start_value_o,
        i,
        lbVal_constprop_i,
        lbVal_constprop_o,
        rbVal_constprop_i,
        rbVal_constprop_o,
        ap_clk,
        ap_rst,
        projectionToRow_ap_vld,
        i_ap_vld,
        ap_start,
        left_bound_ap_vld,
        lbVal_constprop_i_ap_vld,
        lbVal_constprop_o_ap_vld,
        rbVal_constprop_i_ap_vld,
        rbVal_constprop_o_ap_vld,
        ap_done,
        start_index_ap_vld,
        start_value_i_ap_vld,
        start_value_o_ap_vld,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [2:0] num_points_address0;
output   num_points_ce0;
output  [31:0] num_points_d0;
input  [31:0] num_points_q0;
output   num_points_we0;
output  [2:0] num_points_address1;
output   num_points_ce1;
output  [31:0] num_points_d1;
input  [31:0] num_points_q1;
output   num_points_we1;
output  [11:0] points_address0;
output   points_ce0;
output  [127:0] points_d0;
input  [127:0] points_q0;
output   points_we0;
output  [11:0] points_address1;
output   points_ce1;
output  [127:0] points_d1;
input  [127:0] points_q1;
output   points_we1;
output  [31:0] left_bound;
input  [25:0] projectionToRow;
output  [31:0] start_index;
input  [31:0] start_value_i;
output  [31:0] start_value_o;
input  [2:0] i;
input  [31:0] lbVal_constprop_i;
output  [31:0] lbVal_constprop_o;
input  [31:0] rbVal_constprop_i;
output  [31:0] rbVal_constprop_o;
input   ap_clk;
input   ap_rst;
input   projectionToRow_ap_vld;
input   i_ap_vld;
input   ap_start;
output   left_bound_ap_vld;
input   lbVal_constprop_i_ap_vld;
output   lbVal_constprop_o_ap_vld;
input   rbVal_constprop_i_ap_vld;
output   rbVal_constprop_o_ap_vld;
output   ap_done;
output   start_index_ap_vld;
input   start_value_i_ap_vld;
output   start_value_o_ap_vld;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_start;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_done;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_continue;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_idle;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready;
wire   [25:0] p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_din;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_write;
wire   [2:0] p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_din;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_write;
wire   [2:0] p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_din;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_write;
wire    p_find_left_and_right_boundaries6_U0_ap_start;
wire    p_find_left_and_right_boundaries6_U0_ap_done;
wire    p_find_left_and_right_boundaries6_U0_ap_continue;
wire    p_find_left_and_right_boundaries6_U0_ap_idle;
wire    p_find_left_and_right_boundaries6_U0_ap_ready;
wire   [2:0] p_find_left_and_right_boundaries6_U0_num_points_address0;
wire    p_find_left_and_right_boundaries6_U0_num_points_ce0;
wire   [11:0] p_find_left_and_right_boundaries6_U0_points_address0;
wire    p_find_left_and_right_boundaries6_U0_points_ce0;
wire   [31:0] p_find_left_and_right_boundaries6_U0_left_bound;
wire    p_find_left_and_right_boundaries6_U0_left_bound_ap_vld;
wire    p_find_left_and_right_boundaries6_U0_i_read;
wire   [31:0] p_find_left_and_right_boundaries6_U0_lbVal_constprop_o;
wire    p_find_left_and_right_boundaries6_U0_lbVal_constprop_o_ap_vld;
wire   [31:0] p_find_left_and_right_boundaries6_U0_rbVal_constprop_o;
wire    p_find_left_and_right_boundaries6_U0_rbVal_constprop_o_ap_vld;
wire    ap_sync_continue;
wire    p_find_starting_index_and_value5_U0_ap_start;
wire    p_find_starting_index_and_value5_U0_ap_done;
wire    p_find_starting_index_and_value5_U0_ap_continue;
wire    p_find_starting_index_and_value5_U0_ap_idle;
wire    p_find_starting_index_and_value5_U0_ap_ready;
wire   [2:0] p_find_starting_index_and_value5_U0_num_points_address1;
wire    p_find_starting_index_and_value5_U0_num_points_ce1;
wire   [11:0] p_find_starting_index_and_value5_U0_points_address1;
wire    p_find_starting_index_and_value5_U0_points_ce1;
wire    p_find_starting_index_and_value5_U0_projectionToRow_read;
wire   [31:0] p_find_starting_index_and_value5_U0_start_index;
wire    p_find_starting_index_and_value5_U0_start_index_ap_vld;
wire   [31:0] p_find_starting_index_and_value5_U0_start_value_o;
wire    p_find_starting_index_and_value5_U0_start_value_o_ap_vld;
wire    p_find_starting_index_and_value5_U0_i_read;
wire    projectionToRow_c_full_n;
wire   [25:0] projectionToRow_c_dout;
wire    projectionToRow_c_empty_n;
wire    i_c_full_n;
wire   [2:0] i_c_dout;
wire    i_c_empty_n;
wire    i_c7_full_n;
wire   [2:0] i_c7_dout;
wire    i_c7_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready;
wire    ap_sync_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready;
reg    ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready;
wire    ap_sync_p_find_left_and_right_boundaries6_U0_ap_ready;
reg    ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready;
wire    ap_sync_p_find_starting_index_and_value5_U0_ap_ready;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_start_full_n;
wire    p_find_boundaries_and_starting_index_and_value_entry25_U0_start_write;
wire    p_find_left_and_right_boundaries6_U0_start_full_n;
wire    p_find_left_and_right_boundaries6_U0_start_write;
wire    p_find_starting_index_and_value5_U0_start_full_n;
wire    p_find_starting_index_and_value5_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready = 1'b0;
#0 ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready = 1'b0;
#0 ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready = 1'b0;
end

system_top_p_find_boundaries_and_starting_index_and_value_entry25 p_find_boundaries_and_starting_index_and_value_entry25_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_start),
    .ap_done(p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_done),
    .ap_continue(p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_continue),
    .ap_idle(p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_idle),
    .ap_ready(p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready),
    .projectionToRow(projectionToRow),
    .i(i),
    .projectionToRow_out_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_din),
    .projectionToRow_out_full_n(projectionToRow_c_full_n),
    .projectionToRow_out_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_write),
    .i_out_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_din),
    .i_out_full_n(i_c_full_n),
    .i_out_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_write),
    .i_out1_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_din),
    .i_out1_full_n(i_c7_full_n),
    .i_out1_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_write)
);

system_top_p_find_left_and_right_boundaries6 p_find_left_and_right_boundaries6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_find_left_and_right_boundaries6_U0_ap_start),
    .ap_done(p_find_left_and_right_boundaries6_U0_ap_done),
    .ap_continue(p_find_left_and_right_boundaries6_U0_ap_continue),
    .ap_idle(p_find_left_and_right_boundaries6_U0_ap_idle),
    .ap_ready(p_find_left_and_right_boundaries6_U0_ap_ready),
    .num_points_address0(p_find_left_and_right_boundaries6_U0_num_points_address0),
    .num_points_ce0(p_find_left_and_right_boundaries6_U0_num_points_ce0),
    .num_points_q0(num_points_q0),
    .points_address0(p_find_left_and_right_boundaries6_U0_points_address0),
    .points_ce0(p_find_left_and_right_boundaries6_U0_points_ce0),
    .points_q0(points_q0),
    .left_bound(p_find_left_and_right_boundaries6_U0_left_bound),
    .left_bound_ap_vld(p_find_left_and_right_boundaries6_U0_left_bound_ap_vld),
    .i_dout(i_c_dout),
    .i_empty_n(i_c_empty_n),
    .i_read(p_find_left_and_right_boundaries6_U0_i_read),
    .lbVal_constprop_i(lbVal_constprop_i),
    .lbVal_constprop_o(p_find_left_and_right_boundaries6_U0_lbVal_constprop_o),
    .lbVal_constprop_o_ap_vld(p_find_left_and_right_boundaries6_U0_lbVal_constprop_o_ap_vld),
    .rbVal_constprop_i(rbVal_constprop_i),
    .rbVal_constprop_o(p_find_left_and_right_boundaries6_U0_rbVal_constprop_o),
    .rbVal_constprop_o_ap_vld(p_find_left_and_right_boundaries6_U0_rbVal_constprop_o_ap_vld)
);

system_top_p_find_starting_index_and_value5 p_find_starting_index_and_value5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_find_starting_index_and_value5_U0_ap_start),
    .ap_done(p_find_starting_index_and_value5_U0_ap_done),
    .ap_continue(p_find_starting_index_and_value5_U0_ap_continue),
    .ap_idle(p_find_starting_index_and_value5_U0_ap_idle),
    .ap_ready(p_find_starting_index_and_value5_U0_ap_ready),
    .num_points_address1(p_find_starting_index_and_value5_U0_num_points_address1),
    .num_points_ce1(p_find_starting_index_and_value5_U0_num_points_ce1),
    .num_points_q1(num_points_q1),
    .points_address1(p_find_starting_index_and_value5_U0_points_address1),
    .points_ce1(p_find_starting_index_and_value5_U0_points_ce1),
    .points_q1(points_q1),
    .projectionToRow_dout(projectionToRow_c_dout),
    .projectionToRow_empty_n(projectionToRow_c_empty_n),
    .projectionToRow_read(p_find_starting_index_and_value5_U0_projectionToRow_read),
    .start_index(p_find_starting_index_and_value5_U0_start_index),
    .start_index_ap_vld(p_find_starting_index_and_value5_U0_start_index_ap_vld),
    .start_value_i(start_value_i),
    .start_value_o(p_find_starting_index_and_value5_U0_start_value_o),
    .start_value_o_ap_vld(p_find_starting_index_and_value5_U0_start_value_o_ap_vld),
    .i_dout(i_c7_dout),
    .i_empty_n(i_c7_empty_n),
    .i_read(p_find_starting_index_and_value5_U0_i_read)
);

system_top_fifo_w26_d2_S projectionToRow_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_din),
    .if_full_n(projectionToRow_c_full_n),
    .if_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_projectionToRow_out_write),
    .if_dout(projectionToRow_c_dout),
    .if_empty_n(projectionToRow_c_empty_n),
    .if_read(p_find_starting_index_and_value5_U0_projectionToRow_read)
);

system_top_fifo_w3_d2_S i_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_din),
    .if_full_n(i_c_full_n),
    .if_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out_write),
    .if_dout(i_c_dout),
    .if_empty_n(i_c_empty_n),
    .if_read(p_find_left_and_right_boundaries6_U0_i_read)
);

system_top_fifo_w3_d2_S i_c7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_din),
    .if_full_n(i_c7_full_n),
    .if_write(p_find_boundaries_and_starting_index_and_value_entry25_U0_i_out1_write),
    .if_dout(i_c7_dout),
    .if_empty_n(i_c7_empty_n),
    .if_read(p_find_starting_index_and_value5_U0_i_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready <= ap_sync_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready <= ap_sync_p_find_left_and_right_boundaries6_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready <= ap_sync_p_find_starting_index_and_value5_U0_ap_ready;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (p_find_starting_index_and_value5_U0_ap_idle & p_find_left_and_right_boundaries6_U0_ap_idle & p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (p_find_starting_index_and_value5_U0_ap_done & p_find_left_and_right_boundaries6_U0_ap_done);

assign ap_sync_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready = (p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready | ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready);

assign ap_sync_p_find_left_and_right_boundaries6_U0_ap_ready = (p_find_left_and_right_boundaries6_U0_ap_ready | ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready);

assign ap_sync_p_find_starting_index_and_value5_U0_ap_ready = (p_find_starting_index_and_value5_U0_ap_ready | ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready);

assign ap_sync_ready = (ap_sync_p_find_starting_index_and_value5_U0_ap_ready & ap_sync_p_find_left_and_right_boundaries6_U0_ap_ready & ap_sync_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready);

assign lbVal_constprop_o = p_find_left_and_right_boundaries6_U0_lbVal_constprop_o;

assign lbVal_constprop_o_ap_vld = p_find_left_and_right_boundaries6_U0_lbVal_constprop_o_ap_vld;

assign left_bound = p_find_left_and_right_boundaries6_U0_left_bound;

assign left_bound_ap_vld = p_find_left_and_right_boundaries6_U0_left_bound_ap_vld;

assign num_points_address0 = p_find_left_and_right_boundaries6_U0_num_points_address0;

assign num_points_address1 = p_find_starting_index_and_value5_U0_num_points_address1;

assign num_points_ce0 = p_find_left_and_right_boundaries6_U0_num_points_ce0;

assign num_points_ce1 = p_find_starting_index_and_value5_U0_num_points_ce1;

assign num_points_d0 = 32'd0;

assign num_points_d1 = 32'd0;

assign num_points_we0 = 1'b0;

assign num_points_we1 = 1'b0;

assign p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_continue = 1'b1;

assign p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_start = ((ap_sync_reg_p_find_boundaries_and_starting_index_and_value_entry25_U0_ap_ready ^ 1'b1) & ap_start);

assign p_find_boundaries_and_starting_index_and_value_entry25_U0_start_full_n = 1'b1;

assign p_find_boundaries_and_starting_index_and_value_entry25_U0_start_write = 1'b0;

assign p_find_left_and_right_boundaries6_U0_ap_continue = ap_sync_continue;

assign p_find_left_and_right_boundaries6_U0_ap_start = ((ap_sync_reg_p_find_left_and_right_boundaries6_U0_ap_ready ^ 1'b1) & ap_start);

assign p_find_left_and_right_boundaries6_U0_start_full_n = 1'b1;

assign p_find_left_and_right_boundaries6_U0_start_write = 1'b0;

assign p_find_starting_index_and_value5_U0_ap_continue = ap_sync_continue;

assign p_find_starting_index_and_value5_U0_ap_start = ((ap_sync_reg_p_find_starting_index_and_value5_U0_ap_ready ^ 1'b1) & ap_start);

assign p_find_starting_index_and_value5_U0_start_full_n = 1'b1;

assign p_find_starting_index_and_value5_U0_start_write = 1'b0;

assign points_address0 = p_find_left_and_right_boundaries6_U0_points_address0;

assign points_address1 = p_find_starting_index_and_value5_U0_points_address1;

assign points_ce0 = p_find_left_and_right_boundaries6_U0_points_ce0;

assign points_ce1 = p_find_starting_index_and_value5_U0_points_ce1;

assign points_d0 = 128'd0;

assign points_d1 = 128'd0;

assign points_we0 = 1'b0;

assign points_we1 = 1'b0;

assign rbVal_constprop_o = p_find_left_and_right_boundaries6_U0_rbVal_constprop_o;

assign rbVal_constprop_o_ap_vld = p_find_left_and_right_boundaries6_U0_rbVal_constprop_o_ap_vld;

assign start_index = p_find_starting_index_and_value5_U0_start_index;

assign start_index_ap_vld = p_find_starting_index_and_value5_U0_start_index_ap_vld;

assign start_value_o = p_find_starting_index_and_value5_U0_start_value_o;

assign start_value_o_ap_vld = p_find_starting_index_and_value5_U0_start_value_o_ap_vld;

endmodule //system_top_p_find_boundaries_and_starting_index_and_value4
